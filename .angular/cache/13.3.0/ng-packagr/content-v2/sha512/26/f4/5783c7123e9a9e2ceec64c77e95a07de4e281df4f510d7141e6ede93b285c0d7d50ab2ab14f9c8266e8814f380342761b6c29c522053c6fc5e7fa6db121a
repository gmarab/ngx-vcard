{"hash":"b52b317055fa452afe641ae40c46df9372437078","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Directive, Input, HostListener, NgModule } from '@angular/core';\n\nvar VCardEncoding;\r\n(function (VCardEncoding) {\r\n    VCardEncoding[\"none\"] = \"\";\r\n    VCardEncoding[\"utf8\"] = \";CHARSET=utf-8\";\r\n})(VCardEncoding || (VCardEncoding = {}));\n\n/**\r\n * Encodes string\r\n */\r\nfunction e(value) {\r\n    if (value) {\r\n        if (typeof value !== 'string') {\r\n            value = '' + value;\r\n        }\r\n        return value\r\n            .replace(/\\n/g, '\\n')\r\n            .replace(/,/g, ',')\r\n            .replace(/;/g, ';');\r\n    }\r\n    return '';\r\n}\r\n/**\r\n * Return new line characters\r\n */\r\nfunction nl() {\r\n    return '\\n';\r\n}\n\nfunction propertyToVCardString(property) {\r\n    let str = '';\r\n    if (property.language) {\r\n        str += ';LANGUAGE=' + e(property.language);\r\n    }\r\n    if (property.value) {\r\n        str += ';VALUE=' + e(property.value);\r\n    }\r\n    if (property.altid) {\r\n        str += ';ALTID=' + e(property.altid);\r\n    }\r\n    if (property.pid) {\r\n        str += ';PID=' + property.pid.map(s => e(s)).join(',');\r\n    }\r\n    if (property.type) {\r\n        if (Array.isArray(property.type)) {\r\n            if (property.type.length === 1) {\r\n                str += ';TYPE=' + property.type[0];\r\n            }\r\n            else {\r\n                str += ';TYPE=\"' + property.type.map(s => s.toLowerCase()).join(',') + '\"';\r\n            }\r\n        }\r\n        else {\r\n            str += ';TYPE=' + property.type;\r\n        }\r\n    }\r\n    if (property.mediatype) {\r\n        str += ';MEDIATYPE=' + e(property.mediatype);\r\n    }\r\n    if (property.pref) {\r\n        str += ';PREF=' + property.pref;\r\n    }\r\n    if (property.calscale) {\r\n        str += ';CALSCALE=' + e(property.calscale);\r\n    }\r\n    if (property.sortas) {\r\n        str += ';SORT-AS=\"' + property.sortas.map(s => e(s)).join(',') + '\"';\r\n    }\r\n    if (property.geo) {\r\n        str += ';GEO=' + e(property.geo);\r\n    }\r\n    if (property.timezone) {\r\n        str += ';TZ=' + e(property.timezone);\r\n    }\r\n    return str;\r\n}\r\nfunction isPropertyWithParameters(object) {\r\n    const test = object;\r\n    if (test == null || test.param == null || test.value == null) {\r\n        return false;\r\n    }\r\n    return (test.param.language !== undefined ||\r\n        test.param.value !== undefined ||\r\n        test.param.pref !== undefined ||\r\n        test.param.altid !== undefined ||\r\n        test.param.pid !== undefined ||\r\n        test.param.type !== undefined ||\r\n        test.param.mediatype !== undefined ||\r\n        test.param.calscale !== undefined ||\r\n        test.param.sortas !== undefined ||\r\n        test.param.geo !== undefined ||\r\n        test.param.timezone !== undefined);\r\n}\r\nfunction isPropertyWithParametersAddressValue(object) {\r\n    const test = object;\r\n    if (test == null || test.param == null || test.value == null) {\r\n        return false;\r\n    }\r\n    return (test.param.language !== undefined ||\r\n        test.param.value !== undefined ||\r\n        test.param.pref !== undefined ||\r\n        test.param.altid !== undefined ||\r\n        test.param.pid !== undefined ||\r\n        test.param.type !== undefined ||\r\n        test.param.mediatype !== undefined ||\r\n        test.param.calscale !== undefined ||\r\n        test.param.sortas !== undefined ||\r\n        test.param.geo !== undefined ||\r\n        test.param.timezone !== undefined);\r\n}\n\nclass VCardFormatter {\r\n    static getVCardAsBlob(vCard, encoding = VCardEncoding.none) {\r\n        const data = VCardFormatter.getVCardAsString(vCard, encoding);\r\n        return new Blob([data], { type: 'text/vcard' });\r\n    }\r\n    /**\r\n     * Get formatted vCard in VCF format\r\n     */\r\n    static getVCardAsString(vCard, encodingPrefix = VCardEncoding.none) {\r\n        if (!vCard.version) {\r\n            vCard.version = '4.0';\r\n        }\r\n        const majorVersion = getMajorVersion(vCard.version);\r\n        let formattedVCardString = '';\r\n        formattedVCardString += 'BEGIN:VCARD' + nl();\r\n        formattedVCardString += 'VERSION:' + vCard.version + nl();\r\n        // const encodingPrefix = '';\r\n        let formattedName = '';\r\n        if (vCard.name == null) {\r\n            vCard.name = {};\r\n        }\r\n        let nameArray = [];\r\n        if (vCard.formattedName != null) {\r\n            nameArray = [vCard.formattedName.firstNames, vCard.formattedName.addtionalNames, vCard.formattedName.lastNames];\r\n        }\r\n        else {\r\n            nameArray = [vCard.name.firstNames, vCard.name.addtionalNames, vCard.name.lastNames];\r\n        }\r\n        formattedName = nameArray.filter((string) => string != null).join(' ');\r\n        formattedVCardString += 'FN' + encodingPrefix + ':' + e(formattedName) + nl();\r\n        formattedVCardString +=\r\n            'N' +\r\n                encodingPrefix +\r\n                ':' +\r\n                [\r\n                    e(vCard.name.lastNames),\r\n                    e(vCard.name.firstNames),\r\n                    e(vCard.name.addtionalNames),\r\n                    e(vCard.name.namePrefix),\r\n                    e(vCard.name.nameSuffix),\r\n                ].join(';') +\r\n                nl();\r\n        if (vCard.nickname && majorVersion >= 3) {\r\n            formattedVCardString += 'NICKNAME' + encodingPrefix + ':' + e(vCard.nickname) + nl();\r\n        }\r\n        if (vCard.gender) {\r\n            if (vCard.gender.sex) {\r\n                formattedVCardString += 'GENDER:' + e(vCard.gender.sex);\r\n                if (vCard.gender.text) {\r\n                    formattedVCardString += ';' + e(vCard.gender.text);\r\n                }\r\n                formattedVCardString += nl();\r\n            }\r\n            else {\r\n                formattedVCardString += 'GENDER:;' + e(vCard.gender.text) + nl();\r\n            }\r\n        }\r\n        if (vCard.uid) {\r\n            formattedVCardString += 'UID' + encodingPrefix + ':' + e(vCard.uid) + nl();\r\n        }\r\n        if (vCard.birthday) {\r\n            formattedVCardString += 'BDAY:' + YYYYMMDD(vCard.birthday) + nl();\r\n        }\r\n        if (vCard.anniversary) {\r\n            formattedVCardString += 'ANNIVERSARY:' + YYYYMMDD(vCard.anniversary) + nl();\r\n        }\r\n        if (vCard.language) {\r\n            vCard.language.forEach((language) => {\r\n                if (isPropertyWithParameters(language)) {\r\n                    formattedVCardString += 'LANG' + propertyToVCardString(language.param) + ':' + e(language.value) + nl();\r\n                }\r\n                else {\r\n                    formattedVCardString += 'LANG:' + e(language) + nl();\r\n                }\r\n            });\r\n        }\r\n        if (vCard.organization) {\r\n            if (isPropertyWithParameters(vCard.organization)) {\r\n                formattedVCardString +=\r\n                    'ORG' + propertyToVCardString(vCard.organization.param) + ':' + e(vCard.organization.value) + nl();\r\n            }\r\n            else {\r\n                formattedVCardString += 'ORG' + encodingPrefix + ':' + e(vCard.organization) + nl();\r\n            }\r\n        }\r\n        if (vCard.address) {\r\n            vCard.address.forEach((address) => {\r\n                if (isPropertyWithParametersAddressValue(address)) {\r\n                    formattedVCardString +=\r\n                        'ADR' +\r\n                            propertyToVCardString(address.param) +\r\n                            getFormattedAddress(address.value) +\r\n                            nl();\r\n                }\r\n                else {\r\n                    formattedVCardString += 'ADR' + getFormattedAddress(address) + nl();\r\n                }\r\n            });\r\n        }\r\n        if (vCard.telephone) {\r\n            vCard.telephone.forEach((element) => {\r\n                if (!isPropertyWithParameters(element)) {\r\n                    element = {\r\n                        value: element,\r\n                        param: {\r\n                            type: 'voice',\r\n                        },\r\n                    };\r\n                }\r\n                formattedVCardString +=\r\n                    'TEL' + propertyToVCardString(element.param) + ':' + e(element.value) + nl();\r\n            });\r\n        }\r\n        if (vCard.email) {\r\n            vCard.email.forEach((email) => {\r\n                if (isPropertyWithParameters(email)) {\r\n                    formattedVCardString += 'EMAIL' + propertyToVCardString(email.param) + ':' + e(email.value) + nl();\r\n                }\r\n                else {\r\n                    formattedVCardString += 'EMAIL:' + e(email) + nl();\r\n                }\r\n            });\r\n        }\r\n        if (vCard.title) {\r\n            formattedVCardString += 'TITLE' + encodingPrefix + ':' + e(vCard.title) + nl();\r\n        }\r\n        if (vCard.logo) {\r\n            if (isPropertyWithParameters(vCard.logo)) {\r\n                formattedVCardString += 'LOGO' + propertyToVCardString(vCard.logo.param) + ':' + e(vCard.logo.value) + nl();\r\n            }\r\n            else {\r\n                formattedVCardString += 'LOGO:' + e(vCard.logo) + nl();\r\n            }\r\n        }\r\n        if (vCard.photo) {\r\n            if (isPropertyWithParameters(vCard.photo)) {\r\n                formattedVCardString += 'PHOTO' + propertyToVCardString(vCard.photo.param) + ':' + e(vCard.photo.value) + nl();\r\n            }\r\n            else {\r\n                formattedVCardString += 'PHOTO:' + e(vCard.photo) + nl();\r\n            }\r\n        }\r\n        if (vCard.homeFax) {\r\n            vCard.homeFax.forEach(function (number) {\r\n                if (+majorVersion >= 4) {\r\n                    formattedVCardString += 'TEL;VALUE=uri;TYPE=\"fax,home\":tel:' + e(number) + nl();\r\n                }\r\n                else {\r\n                    formattedVCardString += 'TEL;TYPE=HOME,FAX:' + e(number) + nl();\r\n                }\r\n            });\r\n        }\r\n        if (vCard.workFax) {\r\n            vCard.workFax.forEach(function (number) {\r\n                if (+majorVersion >= 4) {\r\n                    formattedVCardString += 'TEL;VALUE=uri;TYPE=\"fax,work\":tel:' + e(number) + nl();\r\n                }\r\n                else {\r\n                    formattedVCardString += 'TEL;TYPE=WORK,FAX:' + e(number) + nl();\r\n                }\r\n            });\r\n        }\r\n        if (vCard.role) {\r\n            formattedVCardString += 'ROLE' + encodingPrefix + ':' + e(vCard.role) + nl();\r\n        }\r\n        if (vCard.url) {\r\n            let urlNotSet = true;\r\n            if (hasProp(vCard.url, 'home')) {\r\n                formattedVCardString += 'URL;type=HOME' + encodingPrefix + ':' + e(vCard.url.home) + nl();\r\n                urlNotSet = false;\r\n            }\r\n            if (hasProp(vCard.url, 'work')) {\r\n                formattedVCardString += 'URL;type=WORK' + encodingPrefix + ':' + e(vCard.url.work) + nl();\r\n                urlNotSet = false;\r\n            }\r\n            if (urlNotSet) {\r\n                formattedVCardString += 'URL' + encodingPrefix + ':' + e(vCard.url) + nl();\r\n            }\r\n        }\r\n        if (vCard.note) {\r\n            formattedVCardString += 'NOTE' + encodingPrefix + ':' + e(vCard.note) + nl();\r\n        }\r\n        if (vCard.socialUrls) {\r\n            for (const key in vCard.socialUrls) {\r\n                if (vCard.socialUrls.hasOwnProperty(key) && vCard.socialUrls[key]) {\r\n                    formattedVCardString +=\r\n                        'X-SOCIALPROFILE' + encodingPrefix + ';TYPE=' + key + ':' + e(vCard.socialUrls[key]) + nl();\r\n                }\r\n            }\r\n        }\r\n        if (vCard.source) {\r\n            if (isPropertyWithParameters(vCard.source)) {\r\n                formattedVCardString +=\r\n                    'SOURCE' + encodingPrefix + propertyToVCardString(vCard.source.param) + ':' + e(vCard.source.value) + +nl();\r\n            }\r\n            else {\r\n                formattedVCardString += 'SOURCE' + encodingPrefix + ':' + e(vCard.source) + nl();\r\n            }\r\n        }\r\n        if (vCard.rev) {\r\n            formattedVCardString += 'REV:' + vCard.rev + nl();\r\n        }\r\n        formattedVCardString += 'END:VCARD' + nl();\r\n        return formattedVCardString;\r\n    }\r\n}\r\n/**\r\n * Get formatted photo\r\n * @param photoType       Photo type (PHOTO, LOGO)\r\n * @param url             URL to attach photo from\r\n * @param mediaType       Media-type of photo (JPEG, PNG, GIF)\r\n */\r\nfunction getFormattedPhoto(photoType, url, mediaType, base64, majorVersion) {\r\n    let params;\r\n    if (+majorVersion >= 4) {\r\n        params = base64 ? ';ENCODING=b;MEDIATYPE=image/' : ';MEDIATYPE=image/';\r\n    }\r\n    else if (+majorVersion === 3) {\r\n        params = base64 ? ';ENCODING=b;TYPE=' : ';TYPE=';\r\n    }\r\n    else {\r\n        params = base64 ? ';ENCODING=BASE64;' : ';';\r\n    }\r\n    const formattedPhoto = photoType + params + mediaType + ':' + e(url) + nl();\r\n    return formattedPhoto;\r\n}\r\n/**\r\n * Get formatted address\r\n */\r\nfunction getFormattedAddress(address) {\r\n    return ((address.label ? ';LABEL=\"' + e(address.label) + '\"' : '') +\r\n        ':' +\r\n        e(address.postOfficeBox) +\r\n        ';' +\r\n        e(address.extendedAddress) +\r\n        ';' +\r\n        e(address.street) +\r\n        ';' +\r\n        e(address.locality) +\r\n        ';' +\r\n        e(address.region) +\r\n        ';' +\r\n        e(address.postalCode) +\r\n        ';' +\r\n        e(address.countryName));\r\n}\r\n/**\r\n * Convert date to YYYYMMDD format\r\n */\r\nfunction YYYYMMDD(date) {\r\n    if (!date) {\r\n        return '';\r\n    }\r\n    return date.toLocaleDateString('se').replace(/\\D/g, ''); // use Swedish date format\r\n}\r\n/**\r\n * Get major version from version string\r\n */\r\nfunction getMajorVersion(version) {\r\n    const majorVersionString = version ? version.slice(0, 1) : '4';\r\n    if (!isNaN(+majorVersionString)) {\r\n        return Number.parseInt(majorVersionString);\r\n    }\r\n    return 4;\r\n}\r\n/**\r\n * Determines if the object has the Property\r\n * @param obj Object to test\r\n * @param property Property to check\r\n */\r\nfunction hasProp(obj, property) {\r\n    return Object.prototype.hasOwnProperty.call(obj, property);\r\n}\n\nconst ERROR_MESSAGE = \"ngx-vcard: No input specified. You must specify either 'vcdDownloadVCard' or 'generateVCardFunction'\";\r\nclass DownloadVCardDirective {\r\n    constructor(element) {\r\n        this.element = element;\r\n        this.encoding = VCardEncoding.none;\r\n    }\r\n    onclick() {\r\n        if (this.vCard == '') {\r\n            if (this.generateVCardFunction != undefined &&\r\n                this.generateVCardFunction != '') {\r\n                this.vCard = this.generateVCardFunction();\r\n            }\r\n            else {\r\n                throw new Error(ERROR_MESSAGE);\r\n            }\r\n        }\r\n        const blob = VCardFormatter.getVCardAsBlob(this.vCard, this.encoding);\r\n        let filename = 'vCard';\r\n        if (this.vCard.name != null) {\r\n            filename =\r\n                this.vCard.name.firstNames + ' ' + this.vCard.name.lastNames + '.vcf';\r\n        }\r\n        this.download(blob, filename);\r\n    }\r\n    download(data, filename) {\r\n        // IE 11\r\n        if (window.navigator.msSaveBlob) {\r\n            window.navigator.msSaveBlob(data, filename);\r\n        }\r\n        else {\r\n            const a = document.createElement('a');\r\n            const url = URL.createObjectURL(data);\r\n            a.style.display = 'none';\r\n            a.href = url;\r\n            a.download = filename;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            window.URL.revokeObjectURL(url);\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        if (this.vCard == '' &&\r\n            (this.generateVCardFunction == '' ||\r\n                this.generateVCardFunction == undefined)) {\r\n            throw new Error(ERROR_MESSAGE);\r\n        }\r\n    }\r\n}\r\nDownloadVCardDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DownloadVCardDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\r\nDownloadVCardDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: DownloadVCardDirective, selector: \"[vcdDownloadVCard]\", inputs: { vCard: [\"vcdDownloadVCard\", \"vCard\"], generateVCardFunction: \"generateVCardFunction\", encoding: \"encoding\" }, host: { listeners: { \"click\": \"onclick()\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DownloadVCardDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[vcdDownloadVCard]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { vCard: [{\r\n                type: Input,\r\n                args: ['vcdDownloadVCard']\r\n            }], generateVCardFunction: [{\r\n                type: Input,\r\n                args: ['generateVCardFunction']\r\n            }], encoding: [{\r\n                type: Input\r\n            }], onclick: [{\r\n                type: HostListener,\r\n                args: ['click']\r\n            }] } });\n\nclass NgxVcardModule {\r\n}\r\nNgxVcardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NgxVcardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxVcardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NgxVcardModule, declarations: [DownloadVCardDirective], exports: [DownloadVCardDirective] });\r\nNgxVcardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NgxVcardModule, imports: [[]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NgxVcardModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [],\r\n                    declarations: [DownloadVCardDirective],\r\n                    exports: [DownloadVCardDirective]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of ngx-vcard\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DownloadVCardDirective, NgxVcardModule, VCardEncoding, VCardFormatter, getMajorVersion, isPropertyWithParameters, isPropertyWithParametersAddressValue, propertyToVCardString };\n//# sourceMappingURL=ngx-vcard.mjs.map\n","map":{"version":3,"file":"ngx-vcard.mjs","sources":["../../../projects/ngx-vcard/src/lib/types/vCardEncoding.ts","../../../projects/ngx-vcard/src/lib/helpers.ts","../../../projects/ngx-vcard/src/lib/types/parameter/BasicPropertyParameters.type.ts","../../../projects/ngx-vcard/src/lib/ngx-vcard.formatter.ts","../../../projects/ngx-vcard/src/lib/download-vcard.directive.ts","../../../projects/ngx-vcard/src/lib/ngx-vcard.module.ts","../../../projects/ngx-vcard/src/public_api.ts","../../../projects/ngx-vcard/src/ngx-vcard.ts"],"sourcesContent":["export enum VCardEncoding {\r\n  none = '',\r\n  utf8 = ';CHARSET=utf-8'\r\n}\r\n","/**\r\n * Encodes string\r\n */\r\nexport function e(value: string | undefined): string {\r\n  if (value) {\r\n    if (typeof value !== 'string') {\r\n      value = '' + value;\r\n    }\r\n    return value\r\n      .replace(/\\n/g, '\\n')\r\n      .replace(/,/g, ',')\r\n      .replace(/;/g, ';');\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * Return new line characters\r\n */\r\nexport function nl(): string {\r\n  return '\\n';\r\n}\r\n","import { Address } from '../vCard';\r\nimport { e } from '../../helpers';\r\n\r\n/**\r\n * A property can have attributes associated with it.\r\n * These \"property parameters\" contain meta-information about the property or the property value.\r\n * @link https://tools.ietf.org/html/rfc6350#section-5\r\n */\r\nexport interface BasicPropertyParameters {\r\n  /**\r\n   * The LANGUAGE property parameter is used to identify data in multiple languages.\r\n   * @kind Property: LANGUAGE\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.1\r\n   *\r\n   */\r\n  language?: string;\r\n  /**\r\n   * The VALUE parameter is OPTIONAL, used to identify the value type (data type) and format of the value.\r\n   * @kind Property: VALUE\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.2\r\n   */\r\n  value?:\r\n    | 'text'\r\n    | 'uri'\r\n    | 'date'\r\n    | 'time'\r\n    | 'date-time'\r\n    | 'date-and-or-time'\r\n    | 'timestamp'\r\n    | 'boolean'\r\n    | 'integer'\r\n    | 'float'\r\n    | 'utc-offset'\r\n    | 'language-tag';\r\n  /**\r\n   * The PREF parameter is OPTIONAL and is used to indicate that the corresponding instance of a property is preferred by the vCard author.\r\n   * Its value MUST be an integer between 1 and 100 that quantifies the level of preference.\r\n   * Lower values correspond to a higher level of preference, with 1 being most preferred.\r\n   * @kind Property: PREF\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.3\r\n   */\r\n  pref?:\r\n    | 1\r\n    | 2\r\n    | 3\r\n    | 4\r\n    | 5\r\n    | 6\r\n    | 7\r\n    | 8\r\n    | 9\r\n    | 10\r\n    | 11\r\n    | 12\r\n    | 13\r\n    | 14\r\n    | 15\r\n    | 16\r\n    | 17\r\n    | 18\r\n    | 19\r\n    | 20\r\n    | 21\r\n    | 22\r\n    | 23\r\n    | 24\r\n    | 25\r\n    | 26\r\n    | 27\r\n    | 28\r\n    | 29\r\n    | 30\r\n    | 31\r\n    | 32\r\n    | 33\r\n    | 34\r\n    | 35\r\n    | 36\r\n    | 37\r\n    | 38\r\n    | 39\r\n    | 40\r\n    | 41\r\n    | 42\r\n    | 43\r\n    | 44\r\n    | 45\r\n    | 46\r\n    | 47\r\n    | 48\r\n    | 49\r\n    | 50\r\n    | 51\r\n    | 52\r\n    | 53\r\n    | 54\r\n    | 55\r\n    | 56\r\n    | 57\r\n    | 58\r\n    | 59\r\n    | 60\r\n    | 61\r\n    | 62\r\n    | 63\r\n    | 64\r\n    | 65\r\n    | 66\r\n    | 67\r\n    | 68\r\n    | 69\r\n    | 70\r\n    | 71\r\n    | 72\r\n    | 73\r\n    | 74\r\n    | 75\r\n    | 76\r\n    | 77\r\n    | 78\r\n    | 79\r\n    | 80\r\n    | 81\r\n    | 82\r\n    | 83\r\n    | 84\r\n    | 85\r\n    | 86\r\n    | 87\r\n    | 88\r\n    | 89\r\n    | 90\r\n    | 91\r\n    | 92\r\n    | 93\r\n    | 94\r\n    | 95\r\n    | 96\r\n    | 97\r\n    | 98\r\n    | 99\r\n    | 100;\r\n  /**\r\n   * The ALTID parameter is used to \"tag\" property instances as being alternative representations of the same logical property.\r\n   * For example, translations of a property in multiple languages generates multiple property instances\r\n   * having different LANGUAGE parameter that are tagged with the same ALTID value.\r\n   * @kind Property: ALTID\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.4\r\n   */\r\n  altid?: string;\r\n  /**\r\n   * The PID parameter is used to identify a specific property among multiple instances.\r\n   * @kind Property: PID\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.5\r\n   */\r\n  pid?: string[];\r\n  /**\r\n   * The TYPE parameter has multiple, different uses.\r\n   * In general, it is a way of specifying class characteristics of the associated property.\r\n   * @kind Property: TYPE\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.6\r\n   */\r\n  type?:\r\n    | Array<'work' | 'home' | 'text' | 'voice' | 'fax' | 'cell' | 'video' | 'pager' | 'textphone'>\r\n    | 'work'\r\n    | 'home'\r\n    | 'text'\r\n    | 'voice'\r\n    | 'fax'\r\n    | 'cell'\r\n    | 'video'\r\n    | 'pager'\r\n    | 'textphone';\r\n  /**\r\n   * The MEDIATYPE parameter is used with properties whose value is a URI.\r\n   * @kind Property: MEDIATYPE\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.7\r\n   */\r\n  mediatype?: string;\r\n  /**\r\n   * The CALSCALE parameter is used to define the calendar system in which a date or date-time value is expressed.\r\n   * @kind Property: CALSCALE\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.8\r\n   */\r\n  calscale?: 'gregorian';\r\n  /**\r\n   * The \"sort-as\" parameter is used to specify the string to be used for national-language-specific sorting.\r\n   * Without this information, sorting algorithms could incorrectly sort this vCard within a sequence of sorted vCards.\r\n   * @kind Property: SORT-AS\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.9\r\n   */\r\n  sortas?: string[];\r\n  /**\r\n   * The GEO parameter can be used to indicate global positioning information that is specific to an address.\r\n   * @kind Property: GEO\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.10\r\n   */\r\n  geo?: string;\r\n  /**\r\n   * The TZ parameter can be used to indicate time zone information that is specific to an address.\r\n   * @kind Property: TZ\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.11\r\n   */\r\n  timezone?: string;\r\n}\r\n\r\nexport function propertyToVCardString(property: BasicPropertyParameters): string {\r\n  let str = '';\r\n  if (property.language) {\r\n    str += ';LANGUAGE=' + e(property.language);\r\n  }\r\n  if (property.value) {\r\n    str += ';VALUE=' + e(property.value);\r\n  }\r\n  if (property.altid) {\r\n    str += ';ALTID=' + e(property.altid);\r\n  }\r\n  if (property.pid) {\r\n    str += ';PID=' + property.pid.map(s => e(s)).join(',');\r\n  }\r\n  if (property.type) {\r\n    if (Array.isArray(property.type)) {\r\n      if (property.type.length === 1) {\r\n        str += ';TYPE=' + property.type[0];\r\n      } else {\r\n        str += ';TYPE=\"' + property.type.map(s => s.toLowerCase()).join(',') + '\"';\r\n      }\r\n    } else {\r\n      str += ';TYPE=' + property.type;\r\n    }\r\n  }\r\n  if (property.mediatype) {\r\n    str += ';MEDIATYPE=' + e(property.mediatype);\r\n  }\r\n  if (property.pref) {\r\n    str += ';PREF=' + property.pref;\r\n  }\r\n  if (property.calscale) {\r\n    str += ';CALSCALE=' + e(property.calscale);\r\n  }\r\n  if (property.sortas) {\r\n    str += ';SORT-AS=\"' + property.sortas.map(s => e(s)).join(',') + '\"';\r\n  }\r\n  if (property.geo) {\r\n    str += ';GEO=' + e(property.geo);\r\n  }\r\n  if (property.timezone) {\r\n    str += ';TZ=' + e(property.timezone);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nexport function isPropertyWithParameters(object: any): object is { value?: string; param?: BasicPropertyParameters } {\r\n  const test = <{ value?: string; param?: BasicPropertyParameters }>object;\r\n  if (test == null || test.param == null || test.value == null) {\r\n    return false;\r\n  }\r\n  return (\r\n    test.param.language !== undefined ||\r\n    test.param.value !== undefined ||\r\n    test.param.pref !== undefined ||\r\n    test.param.altid !== undefined ||\r\n    test.param.pid !== undefined ||\r\n    test.param.type !== undefined ||\r\n    test.param.mediatype !== undefined ||\r\n    test.param.calscale !== undefined ||\r\n    test.param.sortas !== undefined ||\r\n    test.param.geo !== undefined ||\r\n    test.param.timezone !== undefined\r\n  );\r\n}\r\n\r\nexport function isPropertyWithParametersAddressValue(\r\n  object: any\r\n): object is { value?: Address; param?: BasicPropertyParameters } {\r\n  const test = <{ value?: Address; param?: BasicPropertyParameters }>object;\r\n  if (test == null || test.param == null || test.value == null) {\r\n    return false;\r\n  }\r\n  return (\r\n    test.param.language !== undefined ||\r\n    test.param.value !== undefined ||\r\n    test.param.pref !== undefined ||\r\n    test.param.altid !== undefined ||\r\n    test.param.pid !== undefined ||\r\n    test.param.type !== undefined ||\r\n    test.param.mediatype !== undefined ||\r\n    test.param.calscale !== undefined ||\r\n    test.param.sortas !== undefined ||\r\n    test.param.geo !== undefined ||\r\n    test.param.timezone !== undefined\r\n  );\r\n}\r\n","import { VCard, Address } from './types/vCard';\r\nimport { VCardEncoding } from './types/vCardEncoding';\r\nimport {\r\n  isPropertyWithParameters,\r\n  propertyToVCardString,\r\n  BasicPropertyParameters,\r\n  isPropertyWithParametersAddressValue,\r\n} from './types/parameter/BasicPropertyParameters.type';\r\nimport { nl, e } from './helpers';\r\n\r\nexport class VCardFormatter {\r\n  public static getVCardAsBlob(vCard: VCard, encoding: VCardEncoding = VCardEncoding.none): Blob {\r\n    const data = VCardFormatter.getVCardAsString(vCard, encoding);\r\n    return new Blob([data], { type: 'text/vcard' });\r\n  }\r\n\r\n  /**\r\n   * Get formatted vCard in VCF format\r\n   */\r\n  public static getVCardAsString(vCard: VCard, encodingPrefix: VCardEncoding = VCardEncoding.none): string {\r\n    if (!vCard.version) {\r\n      vCard.version = '4.0';\r\n    }\r\n    const majorVersion = getMajorVersion(vCard.version);\r\n\r\n    let formattedVCardString = '';\r\n    formattedVCardString += 'BEGIN:VCARD' + nl();\r\n    formattedVCardString += 'VERSION:' + vCard.version + nl();\r\n\r\n    // const encodingPrefix = '';\r\n    let formattedName = '';\r\n    if (vCard.name == null) {\r\n      vCard.name = {};\r\n    }\r\n\r\n    let nameArray = [];\r\n    if (vCard.formattedName != null) {\r\n      nameArray = [vCard.formattedName.firstNames, vCard.formattedName.addtionalNames, vCard.formattedName.lastNames];\r\n    } else {\r\n      nameArray = [vCard.name.firstNames, vCard.name.addtionalNames, vCard.name.lastNames];\r\n    }\r\n\r\n    formattedName = nameArray.filter((string) => string != null).join(' ');\r\n\r\n    formattedVCardString += 'FN' + encodingPrefix + ':' + e(formattedName) + nl();\r\n\r\n    formattedVCardString +=\r\n      'N' +\r\n      encodingPrefix +\r\n      ':' +\r\n      [\r\n        e(vCard.name.lastNames),\r\n        e(vCard.name.firstNames),\r\n        e(vCard.name.addtionalNames),\r\n        e(vCard.name.namePrefix),\r\n        e(vCard.name.nameSuffix),\r\n      ].join(';') +\r\n      nl();\r\n\r\n    if (vCard.nickname && majorVersion >= 3) {\r\n      formattedVCardString += 'NICKNAME' + encodingPrefix + ':' + e(vCard.nickname) + nl();\r\n    }\r\n\r\n    if (vCard.gender) {\r\n      if (vCard.gender.sex) {\r\n        formattedVCardString += 'GENDER:' + e(vCard.gender.sex);\r\n        if (vCard.gender.text) {\r\n          formattedVCardString += ';' + e(vCard.gender.text);\r\n        }\r\n        formattedVCardString += nl();\r\n      } else {\r\n        formattedVCardString += 'GENDER:;' + e(vCard.gender.text) + nl();\r\n      }\r\n    }\r\n\r\n    if (vCard.uid) {\r\n      formattedVCardString += 'UID' + encodingPrefix + ':' + e(vCard.uid) + nl();\r\n    }\r\n\r\n    if (vCard.birthday) {\r\n      formattedVCardString += 'BDAY:' + YYYYMMDD(vCard.birthday) + nl();\r\n    }\r\n\r\n    if (vCard.anniversary) {\r\n      formattedVCardString += 'ANNIVERSARY:' + YYYYMMDD(vCard.anniversary) + nl();\r\n    }\r\n\r\n    if (vCard.language) {\r\n      vCard.language.forEach((language) => {\r\n        if (isPropertyWithParameters(language)) {\r\n          formattedVCardString += 'LANG' + propertyToVCardString(language.param) + ':' + e(language.value) + nl();\r\n        } else {\r\n          formattedVCardString += 'LANG:' + e(language) + nl();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (vCard.organization) {\r\n      if (isPropertyWithParameters(vCard.organization)) {\r\n        formattedVCardString +=\r\n          'ORG' + propertyToVCardString(vCard.organization.param) + ':' + e(vCard.organization.value) + nl();\r\n      } else {\r\n        formattedVCardString += 'ORG' + encodingPrefix + ':' + e(vCard.organization) + nl();\r\n      }\r\n    }\r\n\r\n    if (vCard.address) {\r\n      vCard.address.forEach((address) => {\r\n        if (isPropertyWithParametersAddressValue(address)) {\r\n          formattedVCardString +=\r\n            'ADR' +\r\n            propertyToVCardString(address.param as BasicPropertyParameters) +\r\n            getFormattedAddress(address.value) +\r\n            nl();\r\n        } else {\r\n          formattedVCardString += 'ADR' + getFormattedAddress(address) + nl();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (vCard.telephone) {\r\n      vCard.telephone.forEach((element) => {\r\n        if (!isPropertyWithParameters(element)) {\r\n          element = {\r\n            value: element,\r\n            param: {\r\n              type: 'voice',\r\n            },\r\n          };\r\n        }\r\n        formattedVCardString +=\r\n          'TEL' + propertyToVCardString(element.param as BasicPropertyParameters) + ':' + e(element.value) + nl();\r\n      });\r\n    }\r\n\r\n    if (vCard.email) {\r\n      vCard.email.forEach((email) => {\r\n        if (isPropertyWithParameters(email)) {\r\n          formattedVCardString += 'EMAIL' + propertyToVCardString(email.param) + ':' + e(email.value) + nl();\r\n        } else {\r\n          formattedVCardString += 'EMAIL:' + e(email) + nl();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (vCard.title) {\r\n      formattedVCardString += 'TITLE' + encodingPrefix + ':' + e(vCard.title) + nl();\r\n    }\r\n\r\n    if (vCard.logo) {\r\n      if (isPropertyWithParameters(vCard.logo)) {\r\n        formattedVCardString += 'LOGO' + propertyToVCardString(vCard.logo.param) + ':' + e(vCard.logo.value) + nl();\r\n      } else {\r\n        formattedVCardString += 'LOGO:' + e(vCard.logo) + nl();\r\n      }\r\n    }\r\n\r\n    if (vCard.photo) {\r\n      if (isPropertyWithParameters(vCard.photo)) {\r\n        formattedVCardString += 'PHOTO' + propertyToVCardString(vCard.photo.param) + ':' + e(vCard.photo.value) + nl();\r\n      } else {\r\n        formattedVCardString += 'PHOTO:' + e(vCard.photo) + nl();\r\n      }\r\n    }\r\n\r\n    if (vCard.homeFax) {\r\n      vCard.homeFax.forEach(function (number) {\r\n        if (+majorVersion >= 4) {\r\n          formattedVCardString += 'TEL;VALUE=uri;TYPE=\"fax,home\":tel:' + e(number) + nl();\r\n        } else {\r\n          formattedVCardString += 'TEL;TYPE=HOME,FAX:' + e(number) + nl();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (vCard.workFax) {\r\n      vCard.workFax.forEach(function (number) {\r\n        if (+majorVersion >= 4) {\r\n          formattedVCardString += 'TEL;VALUE=uri;TYPE=\"fax,work\":tel:' + e(number) + nl();\r\n        } else {\r\n          formattedVCardString += 'TEL;TYPE=WORK,FAX:' + e(number) + nl();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (vCard.role) {\r\n      formattedVCardString += 'ROLE' + encodingPrefix + ':' + e(vCard.role) + nl();\r\n    }\r\n\r\n    if (vCard.url) {\r\n      let urlNotSet = true;\r\n      if (hasProp(vCard.url, 'home')) {\r\n        formattedVCardString += 'URL;type=HOME' + encodingPrefix + ':' + e((vCard.url as { home: string }).home) + nl();\r\n        urlNotSet = false;\r\n      }\r\n\r\n      if (hasProp(vCard.url, 'work')) {\r\n        formattedVCardString += 'URL;type=WORK' + encodingPrefix + ':' + e((vCard.url as { work: string }).work) + nl();\r\n        urlNotSet = false;\r\n      }\r\n      if (urlNotSet) {\r\n        formattedVCardString += 'URL' + encodingPrefix + ':' + e(vCard.url as string) + nl();\r\n      }\r\n    }\r\n\r\n    if (vCard.note) {\r\n      formattedVCardString += 'NOTE' + encodingPrefix + ':' + e(vCard.note) + nl();\r\n    }\r\n\r\n    if (vCard.socialUrls) {\r\n      for (const key in vCard.socialUrls) {\r\n        if (vCard.socialUrls.hasOwnProperty(key) && vCard.socialUrls[key]) {\r\n          formattedVCardString +=\r\n            'X-SOCIALPROFILE' + encodingPrefix + ';TYPE=' + key + ':' + e(vCard.socialUrls[key]) + nl();\r\n        }\r\n      }\r\n    }\r\n\r\n    if (vCard.source) {\r\n      if (isPropertyWithParameters(vCard.source)) {\r\n        formattedVCardString +=\r\n          'SOURCE' + encodingPrefix + propertyToVCardString(vCard.source.param) + ':' + e(vCard.source.value) + +nl();\r\n      } else {\r\n        formattedVCardString += 'SOURCE' + encodingPrefix + ':' + e(vCard.source) + nl();\r\n      }\r\n    }\r\n    if (vCard.rev) {\r\n      formattedVCardString += 'REV:' + vCard.rev + nl();\r\n    }\r\n    formattedVCardString += 'END:VCARD' + nl();\r\n    return formattedVCardString;\r\n  }\r\n}\r\n\r\n/**\r\n * Get formatted photo\r\n * @param photoType       Photo type (PHOTO, LOGO)\r\n * @param url             URL to attach photo from\r\n * @param mediaType       Media-type of photo (JPEG, PNG, GIF)\r\n */\r\nfunction getFormattedPhoto(\r\n  photoType: 'PHOTO' | 'LOGO',\r\n  url: string,\r\n  mediaType: string,\r\n  base64: boolean,\r\n  majorVersion: number\r\n) {\r\n  let params;\r\n\r\n  if (+majorVersion >= 4) {\r\n    params = base64 ? ';ENCODING=b;MEDIATYPE=image/' : ';MEDIATYPE=image/';\r\n  } else if (+majorVersion === 3) {\r\n    params = base64 ? ';ENCODING=b;TYPE=' : ';TYPE=';\r\n  } else {\r\n    params = base64 ? ';ENCODING=BASE64;' : ';';\r\n  }\r\n\r\n  const formattedPhoto = photoType + params + mediaType + ':' + e(url) + nl();\r\n  return formattedPhoto;\r\n}\r\n\r\n/**\r\n * Get formatted address\r\n */\r\nfunction getFormattedAddress(address: Address) {\r\n  return (\r\n    (address.label ? ';LABEL=\"' + e(address.label) + '\"' : '') +\r\n    ':' +\r\n    e(address.postOfficeBox) +\r\n    ';' +\r\n    e(address.extendedAddress) +\r\n    ';' +\r\n    e(address.street) +\r\n    ';' +\r\n    e(address.locality) +\r\n    ';' +\r\n    e(address.region) +\r\n    ';' +\r\n    e(address.postalCode) +\r\n    ';' +\r\n    e(address.countryName)\r\n  );\r\n}\r\n\r\n/**\r\n * Convert date to YYYYMMDD format\r\n */\r\nfunction YYYYMMDD(date: Date | undefined): string {\r\n  if (!date) {\r\n    return '';\r\n  }\r\n  return date.toLocaleDateString('se').replace(/\\D/g, ''); // use Swedish date format\r\n}\r\n\r\n/**\r\n * Get major version from version string\r\n */\r\nexport function getMajorVersion(version: string): number {\r\n  const majorVersionString = version ? version.slice(0, 1) : '4';\r\n  if (!isNaN(+majorVersionString)) {\r\n    return Number.parseInt(majorVersionString);\r\n  }\r\n  return 4;\r\n}\r\n\r\n/**\r\n * Determines if the object has the Property\r\n * @param obj Object to test\r\n * @param property Property to check\r\n */\r\nfunction hasProp(obj: any, property: string): boolean {\r\n  return Object.prototype.hasOwnProperty.call(obj, property);\r\n}\r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\nimport { VCardFormatter } from './ngx-vcard.formatter';\r\nimport { VCard } from './types/vCard';\r\nimport { VCardEncoding } from './types/vCardEncoding';\r\n\r\ndeclare global {\r\n  interface Navigator {\r\n      msSaveBlob?: (blob: any, defaultName?: string) => boolean\r\n  }\r\n}\r\n\r\nconst ERROR_MESSAGE =\r\n  \"ngx-vcard: No input specified. You must specify either 'vcdDownloadVCard' or 'generateVCardFunction'\";\r\n@Directive({\r\n  selector: '[vcdDownloadVCard]',\r\n})\r\nexport class DownloadVCardDirective {\r\n  constructor(private element: ElementRef) {}\r\n  // This property is always specified as it is the selector,\r\n  // which means it can't be undefined\r\n  @Input('vcdDownloadVCard')\r\n  vCard!: VCard | '';\r\n  @Input('generateVCardFunction')\r\n  generateVCardFunction: (() => VCard) | '' | undefined;\r\n  @Input() public encoding: VCardEncoding = VCardEncoding.none;\r\n\r\n  @HostListener('click')\r\n  onclick() {\r\n    if (this.vCard == '') {\r\n      if (\r\n        this.generateVCardFunction != undefined &&\r\n        this.generateVCardFunction != ''\r\n      ) {\r\n        this.vCard = this.generateVCardFunction();\r\n      } else {\r\n        throw new Error(ERROR_MESSAGE);\r\n      }\r\n    }\r\n    const blob = VCardFormatter.getVCardAsBlob(this.vCard, this.encoding);\r\n    let filename = 'vCard';\r\n    if (this.vCard.name != null) {\r\n      filename =\r\n        this.vCard.name.firstNames + ' ' + this.vCard.name.lastNames + '.vcf';\r\n    }\r\n    this.download(blob, filename);\r\n  }\r\n\r\n  private download(data: Blob, filename: string) {\r\n    // IE 11\r\n    if (window.navigator.msSaveBlob) {\r\n      window.navigator.msSaveBlob(data, filename);\r\n    } else {\r\n      const a: HTMLAnchorElement = document.createElement('a');\r\n      const url = URL.createObjectURL(data);\r\n      (a as any).style.display = 'none';\r\n      a.href = url;\r\n      a.download = filename;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      window.URL.revokeObjectURL(url);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (\r\n      this.vCard == '' &&\r\n      (this.generateVCardFunction == '' ||\r\n        this.generateVCardFunction == undefined)\r\n    ) {\r\n      throw new Error(ERROR_MESSAGE);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { DownloadVCardDirective } from './download-vcard.directive';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [DownloadVCardDirective],\r\n  exports: [DownloadVCardDirective]\r\n})\r\nexport class NgxVcardModule { }\r\n","/*\r\n * Public API Surface of ngx-vcard\r\n */\r\n\r\nexport * from './lib/ngx-vcard.module';\r\nexport * from './lib/ngx-vcard.formatter';\r\nexport * from './lib/download-vcard.directive';\r\nexport * from './lib/types/vCard';\r\nexport * from './lib/types/vCardEncoding';\r\nexport * from './lib/types/parameter/BasicPropertyParameters.type';\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;IAAY,cAGX;AAHD,CAAA,UAAY,aAAa,EAAA;AACvB,IAAA,aAAA,CAAA,MAAA,CAAA,GAAA,EAAS,CAAA;AACT,IAAA,aAAA,CAAA,MAAA,CAAA,GAAA,gBAAuB,CAAA;AACzB,CAAC,EAHW,aAAa,KAAb,aAAa,GAGxB,EAAA,CAAA,CAAA;;ACHD;;AAEG;AACG,SAAU,CAAC,CAAC,KAAyB,EAAA;AACzC,IAAA,IAAI,KAAK,EAAE;AACT,QAAA,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AAC7B,YAAA,KAAK,GAAG,EAAE,GAAG,KAAK,CAAC;AACpB,SAAA;AACD,QAAA,OAAO,KAAK;AACT,aAAA,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC;AACpB,aAAA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;AAClB,aAAA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACvB,KAAA;AACD,IAAA,OAAO,EAAE,CAAC;AACZ,CAAC;AAED;;AAEG;SACa,EAAE,GAAA;AAChB,IAAA,OAAO,IAAI,CAAC;AACd;;ACyLM,SAAU,qBAAqB,CAAC,QAAiC,EAAA;IACrE,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,IAAI,QAAQ,CAAC,QAAQ,EAAE;QACrB,GAAG,IAAI,YAAY,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAC5C,KAAA;IACD,IAAI,QAAQ,CAAC,KAAK,EAAE;QAClB,GAAG,IAAI,SAAS,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtC,KAAA;IACD,IAAI,QAAQ,CAAC,KAAK,EAAE;QAClB,GAAG,IAAI,SAAS,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtC,KAAA;IACD,IAAI,QAAQ,CAAC,GAAG,EAAE;QAChB,GAAG,IAAI,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACxD,KAAA;IACD,IAAI,QAAQ,CAAC,IAAI,EAAE;QACjB,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AAChC,YAAA,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC9B,GAAG,IAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpC,aAAA;AAAM,iBAAA;gBACL,GAAG,IAAI,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;AAC5E,aAAA;AACF,SAAA;AAAM,aAAA;AACL,YAAA,GAAG,IAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;AACjC,SAAA;AACF,KAAA;IACD,IAAI,QAAQ,CAAC,SAAS,EAAE;QACtB,GAAG,IAAI,aAAa,GAAG,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC9C,KAAA;IACD,IAAI,QAAQ,CAAC,IAAI,EAAE;AACjB,QAAA,GAAG,IAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;AACjC,KAAA;IACD,IAAI,QAAQ,CAAC,QAAQ,EAAE;QACrB,GAAG,IAAI,YAAY,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAC5C,KAAA;IACD,IAAI,QAAQ,CAAC,MAAM,EAAE;QACnB,GAAG,IAAI,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;AACtE,KAAA;IACD,IAAI,QAAQ,CAAC,GAAG,EAAE;QAChB,GAAG,IAAI,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AAClC,KAAA;IACD,IAAI,QAAQ,CAAC,QAAQ,EAAE;QACrB,GAAG,IAAI,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACtC,KAAA;AAED,IAAA,OAAO,GAAG,CAAC;AACb,CAAC;AAEK,SAAU,wBAAwB,CAAC,MAAW,EAAA;IAClD,MAAM,IAAI,GAAwD,MAAM,CAAC;AACzE,IAAA,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;AAC5D,QAAA,OAAO,KAAK,CAAC;AACd,KAAA;AACD,IAAA,QACE,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,SAAS;AACjC,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,SAAS;AAC9B,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,SAAS;AAC7B,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,SAAS;AAC9B,QAAA,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,SAAS;AAC5B,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,SAAS;AAC7B,QAAA,IAAI,CAAC,KAAK,CAAC,SAAS,KAAK,SAAS;AAClC,QAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,SAAS;AACjC,QAAA,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,SAAS;AAC/B,QAAA,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,SAAS;AAC5B,QAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,SAAS,EACjC;AACJ,CAAC;AAEK,SAAU,oCAAoC,CAClD,MAAW,EAAA;IAEX,MAAM,IAAI,GAAyD,MAAM,CAAC;AAC1E,IAAA,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;AAC5D,QAAA,OAAO,KAAK,CAAC;AACd,KAAA;AACD,IAAA,QACE,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,SAAS;AACjC,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,SAAS;AAC9B,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,SAAS;AAC7B,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,SAAS;AAC9B,QAAA,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,SAAS;AAC5B,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,SAAS;AAC7B,QAAA,IAAI,CAAC,KAAK,CAAC,SAAS,KAAK,SAAS;AAClC,QAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,SAAS;AACjC,QAAA,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,SAAS;AAC/B,QAAA,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,SAAS;AAC5B,QAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,SAAS,EACjC;AACJ;;MC3Ra,cAAc,CAAA;IAClB,OAAO,cAAc,CAAC,KAAY,EAAE,QAA0B,GAAA,aAAa,CAAC,IAAI,EAAA;QACrF,MAAM,IAAI,GAAG,cAAc,CAAC,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AAC9D,QAAA,OAAO,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;KACjD;AAED;;AAEG;IACI,OAAO,gBAAgB,CAAC,KAAY,EAAE,cAAgC,GAAA,aAAa,CAAC,IAAI,EAAA;AAC7F,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;AAClB,YAAA,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;AACvB,SAAA;QACD,MAAM,YAAY,GAAG,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAEpD,IAAI,oBAAoB,GAAG,EAAE,CAAC;AAC9B,QAAA,oBAAoB,IAAI,aAAa,GAAG,EAAE,EAAE,CAAC;QAC7C,oBAAoB,IAAI,UAAU,GAAG,KAAK,CAAC,OAAO,GAAG,EAAE,EAAE,CAAC;;QAG1D,IAAI,aAAa,GAAG,EAAE,CAAC;AACvB,QAAA,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,EAAE;AACtB,YAAA,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC;AACjB,SAAA;QAED,IAAI,SAAS,GAAG,EAAE,CAAC;AACnB,QAAA,IAAI,KAAK,CAAC,aAAa,IAAI,IAAI,EAAE;YAC/B,SAAS,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,UAAU,EAAE,KAAK,CAAC,aAAa,CAAC,cAAc,EAAE,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AACjH,SAAA;AAAM,aAAA;YACL,SAAS,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACtF,SAAA;AAED,QAAA,aAAa,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,MAAM,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAEvE,QAAA,oBAAoB,IAAI,IAAI,GAAG,cAAc,GAAG,GAAG,GAAG,CAAC,CAAC,aAAa,CAAC,GAAG,EAAE,EAAE,CAAC;QAE9E,oBAAoB;YAClB,GAAG;gBACH,cAAc;gBACd,GAAG;AACH,gBAAA;AACE,oBAAA,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;AACvB,oBAAA,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC;AACxB,oBAAA,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC;AAC5B,oBAAA,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC;AACxB,oBAAA,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC;iBACzB,CAAC,IAAI,CAAC,GAAG,CAAC;AACX,gBAAA,EAAE,EAAE,CAAC;AAEP,QAAA,IAAI,KAAK,CAAC,QAAQ,IAAI,YAAY,IAAI,CAAC,EAAE;AACvC,YAAA,oBAAoB,IAAI,UAAU,GAAG,cAAc,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC;AACtF,SAAA;QAED,IAAI,KAAK,CAAC,MAAM,EAAE;AAChB,YAAA,IAAI,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE;gBACpB,oBAAoB,IAAI,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACxD,gBAAA,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE;oBACrB,oBAAoB,IAAI,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACpD,iBAAA;gBACD,oBAAoB,IAAI,EAAE,EAAE,CAAC;AAC9B,aAAA;AAAM,iBAAA;AACL,gBAAA,oBAAoB,IAAI,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;AAClE,aAAA;AACF,SAAA;QAED,IAAI,KAAK,CAAC,GAAG,EAAE;AACb,YAAA,oBAAoB,IAAI,KAAK,GAAG,cAAc,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC;AAC5E,SAAA;QAED,IAAI,KAAK,CAAC,QAAQ,EAAE;AAClB,YAAA,oBAAoB,IAAI,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC;AACnE,SAAA;QAED,IAAI,KAAK,CAAC,WAAW,EAAE;AACrB,YAAA,oBAAoB,IAAI,cAAc,GAAG,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,EAAE,CAAC;AAC7E,SAAA;QAED,IAAI,KAAK,CAAC,QAAQ,EAAE;YAClB,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAI;AAClC,gBAAA,IAAI,wBAAwB,CAAC,QAAQ,CAAC,EAAE;oBACtC,oBAAoB,IAAI,MAAM,GAAG,qBAAqB,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC;AACzG,iBAAA;AAAM,qBAAA;oBACL,oBAAoB,IAAI,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC;AACtD,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;QAED,IAAI,KAAK,CAAC,YAAY,EAAE;AACtB,YAAA,IAAI,wBAAwB,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;gBAChD,oBAAoB;oBAClB,KAAK,GAAG,qBAAqB,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC;AACtG,aAAA;AAAM,iBAAA;AACL,gBAAA,oBAAoB,IAAI,KAAK,GAAG,cAAc,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,EAAE,EAAE,CAAC;AACrF,aAAA;AACF,SAAA;QAED,IAAI,KAAK,CAAC,OAAO,EAAE;YACjB,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,KAAI;AAChC,gBAAA,IAAI,oCAAoC,CAAC,OAAO,CAAC,EAAE;oBACjD,oBAAoB;wBAClB,KAAK;AACL,4BAAA,qBAAqB,CAAC,OAAO,CAAC,KAAgC,CAAC;AAC/D,4BAAA,mBAAmB,CAAC,OAAO,CAAC,KAAK,CAAC;AAClC,4BAAA,EAAE,EAAE,CAAC;AACR,iBAAA;AAAM,qBAAA;oBACL,oBAAoB,IAAI,KAAK,GAAG,mBAAmB,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;AACrE,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;QAED,IAAI,KAAK,CAAC,SAAS,EAAE;YACnB,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,OAAO,KAAI;AAClC,gBAAA,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,EAAE;AACtC,oBAAA,OAAO,GAAG;AACR,wBAAA,KAAK,EAAE,OAAO;AACd,wBAAA,KAAK,EAAE;AACL,4BAAA,IAAI,EAAE,OAAO;AACd,yBAAA;qBACF,CAAC;AACH,iBAAA;gBACD,oBAAoB;AAClB,oBAAA,KAAK,GAAG,qBAAqB,CAAC,OAAO,CAAC,KAAgC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC;AAC5G,aAAC,CAAC,CAAC;AACJ,SAAA;QAED,IAAI,KAAK,CAAC,KAAK,EAAE;YACf,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,KAAI;AAC5B,gBAAA,IAAI,wBAAwB,CAAC,KAAK,CAAC,EAAE;oBACnC,oBAAoB,IAAI,OAAO,GAAG,qBAAqB,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC;AACpG,iBAAA;AAAM,qBAAA;oBACL,oBAAoB,IAAI,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC;AACpD,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;QAED,IAAI,KAAK,CAAC,KAAK,EAAE;AACf,YAAA,oBAAoB,IAAI,OAAO,GAAG,cAAc,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC;AAChF,SAAA;QAED,IAAI,KAAK,CAAC,IAAI,EAAE;AACd,YAAA,IAAI,wBAAwB,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;gBACxC,oBAAoB,IAAI,MAAM,GAAG,qBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC;AAC7G,aAAA;AAAM,iBAAA;AACL,gBAAA,oBAAoB,IAAI,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;AACxD,aAAA;AACF,SAAA;QAED,IAAI,KAAK,CAAC,KAAK,EAAE;AACf,YAAA,IAAI,wBAAwB,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;gBACzC,oBAAoB,IAAI,OAAO,GAAG,qBAAqB,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC;AAChH,aAAA;AAAM,iBAAA;AACL,gBAAA,oBAAoB,IAAI,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC;AAC1D,aAAA;AACF,SAAA;QAED,IAAI,KAAK,CAAC,OAAO,EAAE;AACjB,YAAA,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,MAAM,EAAA;AACpC,gBAAA,IAAI,CAAC,YAAY,IAAI,CAAC,EAAE;oBACtB,oBAAoB,IAAI,oCAAoC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC;AACjF,iBAAA;AAAM,qBAAA;oBACL,oBAAoB,IAAI,oBAAoB,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC;AACjE,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;QAED,IAAI,KAAK,CAAC,OAAO,EAAE;AACjB,YAAA,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,MAAM,EAAA;AACpC,gBAAA,IAAI,CAAC,YAAY,IAAI,CAAC,EAAE;oBACtB,oBAAoB,IAAI,oCAAoC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC;AACjF,iBAAA;AAAM,qBAAA;oBACL,oBAAoB,IAAI,oBAAoB,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC;AACjE,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;QAED,IAAI,KAAK,CAAC,IAAI,EAAE;AACd,YAAA,oBAAoB,IAAI,MAAM,GAAG,cAAc,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;AAC9E,SAAA;QAED,IAAI,KAAK,CAAC,GAAG,EAAE;YACb,IAAI,SAAS,GAAG,IAAI,CAAC;YACrB,IAAI,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE;AAC9B,gBAAA,oBAAoB,IAAI,eAAe,GAAG,cAAc,GAAG,GAAG,GAAG,CAAC,CAAE,KAAK,CAAC,GAAwB,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;gBAChH,SAAS,GAAG,KAAK,CAAC;AACnB,aAAA;YAED,IAAI,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE;AAC9B,gBAAA,oBAAoB,IAAI,eAAe,GAAG,cAAc,GAAG,GAAG,GAAG,CAAC,CAAE,KAAK,CAAC,GAAwB,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;gBAChH,SAAS,GAAG,KAAK,CAAC;AACnB,aAAA;AACD,YAAA,IAAI,SAAS,EAAE;AACb,gBAAA,oBAAoB,IAAI,KAAK,GAAG,cAAc,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,GAAa,CAAC,GAAG,EAAE,EAAE,CAAC;AACtF,aAAA;AACF,SAAA;QAED,IAAI,KAAK,CAAC,IAAI,EAAE;AACd,YAAA,oBAAoB,IAAI,MAAM,GAAG,cAAc,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;AAC9E,SAAA;QAED,IAAI,KAAK,CAAC,UAAU,EAAE;AACpB,YAAA,KAAK,MAAM,GAAG,IAAI,KAAK,CAAC,UAAU,EAAE;AAClC,gBAAA,IAAI,KAAK,CAAC,UAAU,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;oBACjE,oBAAoB;wBAClB,iBAAiB,GAAG,cAAc,GAAG,QAAQ,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC;AAC/F,iBAAA;AACF,aAAA;AACF,SAAA;QAED,IAAI,KAAK,CAAC,MAAM,EAAE;AAChB,YAAA,IAAI,wBAAwB,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;gBAC1C,oBAAoB;oBAClB,QAAQ,GAAG,cAAc,GAAG,qBAAqB,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC;AAC/G,aAAA;AAAM,iBAAA;AACL,gBAAA,oBAAoB,IAAI,QAAQ,GAAG,cAAc,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC;AAClF,aAAA;AACF,SAAA;QACD,IAAI,KAAK,CAAC,GAAG,EAAE;YACb,oBAAoB,IAAI,MAAM,GAAG,KAAK,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC;AACnD,SAAA;AACD,QAAA,oBAAoB,IAAI,WAAW,GAAG,EAAE,EAAE,CAAC;AAC3C,QAAA,OAAO,oBAAoB,CAAC;KAC7B;AACF,CAAA;AAED;;;;;AAKG;AACH,SAAS,iBAAiB,CACxB,SAA2B,EAC3B,GAAW,EACX,SAAiB,EACjB,MAAe,EACf,YAAoB,EAAA;AAEpB,IAAA,IAAI,MAAM,CAAC;AAEX,IAAA,IAAI,CAAC,YAAY,IAAI,CAAC,EAAE;QACtB,MAAM,GAAG,MAAM,GAAG,8BAA8B,GAAG,mBAAmB,CAAC;AACxE,KAAA;AAAM,SAAA,IAAI,CAAC,YAAY,KAAK,CAAC,EAAE;QAC9B,MAAM,GAAG,MAAM,GAAG,mBAAmB,GAAG,QAAQ,CAAC;AAClD,KAAA;AAAM,SAAA;QACL,MAAM,GAAG,MAAM,GAAG,mBAAmB,GAAG,GAAG,CAAC;AAC7C,KAAA;AAED,IAAA,MAAM,cAAc,GAAG,SAAS,GAAG,MAAM,GAAG,SAAS,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC;AAC5E,IAAA,OAAO,cAAc,CAAC;AACxB,CAAC;AAED;;AAEG;AACH,SAAS,mBAAmB,CAAC,OAAgB,EAAA;IAC3C,QACE,CAAC,OAAO,CAAC,KAAK,GAAG,UAAU,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE;QACzD,GAAG;AACH,QAAA,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC;QACxB,GAAG;AACH,QAAA,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC;QAC1B,GAAG;AACH,QAAA,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC;QACjB,GAAG;AACH,QAAA,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC;QACnB,GAAG;AACH,QAAA,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC;QACjB,GAAG;AACH,QAAA,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC;QACrB,GAAG;AACH,QAAA,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,EACtB;AACJ,CAAC;AAED;;AAEG;AACH,SAAS,QAAQ,CAAC,IAAsB,EAAA;IACtC,IAAI,CAAC,IAAI,EAAE;AACT,QAAA,OAAO,EAAE,CAAC;AACX,KAAA;AACD,IAAA,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC1D,CAAC;AAED;;AAEG;AACG,SAAU,eAAe,CAAC,OAAe,EAAA;AAC7C,IAAA,MAAM,kBAAkB,GAAG,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;AAC/D,IAAA,IAAI,CAAC,KAAK,CAAC,CAAC,kBAAkB,CAAC,EAAE;AAC/B,QAAA,OAAO,MAAM,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;AAC5C,KAAA;AACD,IAAA,OAAO,CAAC,CAAC;AACX,CAAC;AAED;;;;AAIG;AACH,SAAS,OAAO,CAAC,GAAQ,EAAE,QAAgB,EAAA;AACzC,IAAA,OAAO,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;AAC7D;;AC7SA,MAAM,aAAa,GACjB,sGAAsG,CAAC;MAI5F,sBAAsB,CAAA;AACjC,IAAA,WAAA,CAAoB,OAAmB,EAAA;QAAnB,IAAO,CAAA,OAAA,GAAP,OAAO,CAAY;AAOvB,QAAA,IAAA,CAAA,QAAQ,GAAkB,aAAa,CAAC,IAAI,CAAC;KAPlB;IAU3C,OAAO,GAAA;AACL,QAAA,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE,EAAE;AACpB,YAAA,IACE,IAAI,CAAC,qBAAqB,IAAI,SAAS;AACvC,gBAAA,IAAI,CAAC,qBAAqB,IAAI,EAAE,EAChC;AACA,gBAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAC3C,aAAA;AAAM,iBAAA;AACL,gBAAA,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;AAChC,aAAA;AACF,SAAA;AACD,QAAA,MAAM,IAAI,GAAG,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtE,IAAI,QAAQ,GAAG,OAAO,CAAC;AACvB,QAAA,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,EAAE;YAC3B,QAAQ;AACN,gBAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;AACzE,SAAA;AACD,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;KAC/B;IAEO,QAAQ,CAAC,IAAU,EAAE,QAAgB,EAAA;;AAE3C,QAAA,IAAI,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE;YAC/B,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AAC7C,SAAA;AAAM,aAAA;YACL,MAAM,CAAC,GAAsB,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACzD,MAAM,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;AACrC,YAAA,CAAS,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;AAClC,YAAA,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC;AACb,YAAA,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACtB,YAAA,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC7B,CAAC,CAAC,KAAK,EAAE,CAAC;AACV,YAAA,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AAC7B,YAAA,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;AACjC,SAAA;KACF;IAED,QAAQ,GAAA;AACN,QAAA,IACE,IAAI,CAAC,KAAK,IAAI,EAAE;AAChB,aAAC,IAAI,CAAC,qBAAqB,IAAI,EAAE;AAC/B,gBAAA,IAAI,CAAC,qBAAqB,IAAI,SAAS,CAAC,EAC1C;AACA,YAAA,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;AAChC,SAAA;KACF;;mHAxDU,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;uGAAtB,sBAAsB,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,CAAA,kBAAA,EAAA,OAAA,CAAA,EAAA,qBAAA,EAAA,uBAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,OAAA,EAAA,WAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAtB,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAHlC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,oBAAoB;AAC/B,iBAAA,CAAA;iGAMC,KAAK,EAAA,CAAA;sBADJ,KAAK;uBAAC,kBAAkB,CAAA;gBAGzB,qBAAqB,EAAA,CAAA;sBADpB,KAAK;uBAAC,uBAAuB,CAAA;gBAEd,QAAQ,EAAA,CAAA;sBAAvB,KAAK;gBAGN,OAAO,EAAA,CAAA;sBADN,YAAY;uBAAC,OAAO,CAAA;;;MClBV,cAAc,CAAA;;2GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;4GAAd,cAAc,EAAA,YAAA,EAAA,CAHV,sBAAsB,CAAA,EAAA,OAAA,EAAA,CAC3B,sBAAsB,CAAA,EAAA,CAAA,CAAA;AAErB,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,YAJhB,EAAE,CAAA,EAAA,CAAA,CAAA;2FAIA,cAAc,EAAA,UAAA,EAAA,CAAA;kBAL1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,EAAE;oBACX,YAAY,EAAE,CAAC,sBAAsB,CAAC;oBACtC,OAAO,EAAE,CAAC,sBAAsB,CAAC;AAClC,iBAAA,CAAA;;;ACPD;;AAEG;;ACFH;;AAEG;;;;"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Directive, Input, HostListener, NgModule } from '@angular/core';\n\nvar VCardEncoding;\r\n(function (VCardEncoding) {\r\n    VCardEncoding[\"none\"] = \"\";\r\n    VCardEncoding[\"utf8\"] = \";CHARSET=utf-8\";\r\n})(VCardEncoding || (VCardEncoding = {}));\n\n/**\r\n * Encodes string\r\n */\r\nfunction e(value) {\r\n    if (value) {\r\n        if (typeof value !== 'string') {\r\n            value = '' + value;\r\n        }\r\n        return value\r\n            .replace(/\\n/g, '\\n')\r\n            .replace(/,/g, ',')\r\n            .replace(/;/g, ';');\r\n    }\r\n    return '';\r\n}\r\n/**\r\n * Return new line characters\r\n */\r\nfunction nl() {\r\n    return '\\n';\r\n}\n\nfunction propertyToVCardString(property) {\r\n    let str = '';\r\n    if (property.language) {\r\n        str += ';LANGUAGE=' + e(property.language);\r\n    }\r\n    if (property.value) {\r\n        str += ';VALUE=' + e(property.value);\r\n    }\r\n    if (property.altid) {\r\n        str += ';ALTID=' + e(property.altid);\r\n    }\r\n    if (property.pid) {\r\n        str += ';PID=' + property.pid.map(s => e(s)).join(',');\r\n    }\r\n    if (property.type) {\r\n        if (Array.isArray(property.type)) {\r\n            if (property.type.length === 1) {\r\n                str += ';TYPE=' + property.type[0];\r\n            }\r\n            else {\r\n                str += ';TYPE=\"' + property.type.map(s => s.toLowerCase()).join(',') + '\"';\r\n            }\r\n        }\r\n        else {\r\n            str += ';TYPE=' + property.type;\r\n        }\r\n    }\r\n    if (property.mediatype) {\r\n        str += ';MEDIATYPE=' + e(property.mediatype);\r\n    }\r\n    if (property.pref) {\r\n        str += ';PREF=' + property.pref;\r\n    }\r\n    if (property.calscale) {\r\n        str += ';CALSCALE=' + e(property.calscale);\r\n    }\r\n    if (property.sortas) {\r\n        str += ';SORT-AS=\"' + property.sortas.map(s => e(s)).join(',') + '\"';\r\n    }\r\n    if (property.geo) {\r\n        str += ';GEO=' + e(property.geo);\r\n    }\r\n    if (property.timezone) {\r\n        str += ';TZ=' + e(property.timezone);\r\n    }\r\n    return str;\r\n}\r\nfunction isPropertyWithParameters(object) {\r\n    const test = object;\r\n    if (test == null || test.param == null || test.value == null) {\r\n        return false;\r\n    }\r\n    return (test.param.language !== undefined ||\r\n        test.param.value !== undefined ||\r\n        test.param.pref !== undefined ||\r\n        test.param.altid !== undefined ||\r\n        test.param.pid !== undefined ||\r\n        test.param.type !== undefined ||\r\n        test.param.mediatype !== undefined ||\r\n        test.param.calscale !== undefined ||\r\n        test.param.sortas !== undefined ||\r\n        test.param.geo !== undefined ||\r\n        test.param.timezone !== undefined);\r\n}\r\nfunction isPropertyWithParametersAddressValue(object) {\r\n    const test = object;\r\n    if (test == null || test.param == null || test.value == null) {\r\n        return false;\r\n    }\r\n    return (test.param.language !== undefined ||\r\n        test.param.value !== undefined ||\r\n        test.param.pref !== undefined ||\r\n        test.param.altid !== undefined ||\r\n        test.param.pid !== undefined ||\r\n        test.param.type !== undefined ||\r\n        test.param.mediatype !== undefined ||\r\n        test.param.calscale !== undefined ||\r\n        test.param.sortas !== undefined ||\r\n        test.param.geo !== undefined ||\r\n        test.param.timezone !== undefined);\r\n}\n\nclass VCardFormatter {\r\n    static getVCardAsBlob(vCard, encoding = VCardEncoding.none) {\r\n        const data = VCardFormatter.getVCardAsString(vCard, encoding);\r\n        return new Blob([data], { type: 'text/vcard' });\r\n    }\r\n    /**\r\n     * Get formatted vCard in VCF format\r\n     */\r\n    static getVCardAsString(vCard, encodingPrefix = VCardEncoding.none) {\r\n        if (!vCard.version) {\r\n            vCard.version = '4.0';\r\n        }\r\n        const majorVersion = getMajorVersion(vCard.version);\r\n        let formattedVCardString = '';\r\n        formattedVCardString += 'BEGIN:VCARD' + nl();\r\n        formattedVCardString += 'VERSION:' + vCard.version + nl();\r\n        // const encodingPrefix = '';\r\n        let formattedName = '';\r\n        if (vCard.name == null) {\r\n            vCard.name = {};\r\n        }\r\n        let nameArray = [];\r\n        if (vCard.formattedName != null) {\r\n            nameArray = [vCard.formattedName.firstNames, vCard.formattedName.addtionalNames, vCard.formattedName.lastNames];\r\n        }\r\n        else {\r\n            nameArray = [vCard.name.firstNames, vCard.name.addtionalNames, vCard.name.lastNames];\r\n        }\r\n        formattedName = nameArray.filter((string) => string != null).join(' ');\r\n        formattedVCardString += 'FN' + encodingPrefix + ':' + e(formattedName) + nl();\r\n        formattedVCardString +=\r\n            'N' +\r\n                encodingPrefix +\r\n                ':' +\r\n                [\r\n                    e(vCard.name.lastNames),\r\n                    e(vCard.name.firstNames),\r\n                    e(vCard.name.addtionalNames),\r\n                    e(vCard.name.namePrefix),\r\n                    e(vCard.name.nameSuffix),\r\n                ].join(';') +\r\n                nl();\r\n        if (vCard.nickname && majorVersion >= 3) {\r\n            formattedVCardString += 'NICKNAME' + encodingPrefix + ':' + e(vCard.nickname) + nl();\r\n        }\r\n        if (vCard.gender) {\r\n            if (vCard.gender.sex) {\r\n                formattedVCardString += 'GENDER:' + e(vCard.gender.sex);\r\n                if (vCard.gender.text) {\r\n                    formattedVCardString += ';' + e(vCard.gender.text);\r\n                }\r\n                formattedVCardString += nl();\r\n            }\r\n            else {\r\n                formattedVCardString += 'GENDER:;' + e(vCard.gender.text) + nl();\r\n            }\r\n        }\r\n        if (vCard.uid) {\r\n            formattedVCardString += 'UID' + encodingPrefix + ':' + e(vCard.uid) + nl();\r\n        }\r\n        if (vCard.birthday) {\r\n            formattedVCardString += 'BDAY:' + YYYYMMDD(vCard.birthday) + nl();\r\n        }\r\n        if (vCard.anniversary) {\r\n            formattedVCardString += 'ANNIVERSARY:' + YYYYMMDD(vCard.anniversary) + nl();\r\n        }\r\n        if (vCard.language) {\r\n            vCard.language.forEach((language) => {\r\n                if (isPropertyWithParameters(language)) {\r\n                    formattedVCardString += 'LANG' + propertyToVCardString(language.param) + ':' + e(language.value) + nl();\r\n                }\r\n                else {\r\n                    formattedVCardString += 'LANG:' + e(language) + nl();\r\n                }\r\n            });\r\n        }\r\n        if (vCard.organization) {\r\n            if (isPropertyWithParameters(vCard.organization)) {\r\n                formattedVCardString +=\r\n                    'ORG' + propertyToVCardString(vCard.organization.param) + ':' + e(vCard.organization.value) + nl();\r\n            }\r\n            else {\r\n                formattedVCardString += 'ORG' + encodingPrefix + ':' + e(vCard.organization) + nl();\r\n            }\r\n        }\r\n        if (vCard.address) {\r\n            vCard.address.forEach((address) => {\r\n                if (isPropertyWithParametersAddressValue(address)) {\r\n                    formattedVCardString +=\r\n                        'ADR' +\r\n                            propertyToVCardString(address.param) +\r\n                            getFormattedAddress(address.value) +\r\n                            nl();\r\n                }\r\n                else {\r\n                    formattedVCardString += 'ADR' + getFormattedAddress(address) + nl();\r\n                }\r\n            });\r\n        }\r\n        if (vCard.telephone) {\r\n            vCard.telephone.forEach((element) => {\r\n                if (!isPropertyWithParameters(element)) {\r\n                    element = {\r\n                        value: element,\r\n                        param: {\r\n                            type: 'voice',\r\n                        },\r\n                    };\r\n                }\r\n                formattedVCardString +=\r\n                    'TEL' + propertyToVCardString(element.param) + ':' + e(element.value) + nl();\r\n            });\r\n        }\r\n        if (vCard.email) {\r\n            vCard.email.forEach((email) => {\r\n                if (isPropertyWithParameters(email)) {\r\n                    formattedVCardString += 'EMAIL' + propertyToVCardString(email.param) + ':' + e(email.value) + nl();\r\n                }\r\n                else {\r\n                    formattedVCardString += 'EMAIL:' + e(email) + nl();\r\n                }\r\n            });\r\n        }\r\n        if (vCard.title) {\r\n            formattedVCardString += 'TITLE' + encodingPrefix + ':' + e(vCard.title) + nl();\r\n        }\r\n        if (vCard.logo) {\r\n            if (isPropertyWithParameters(vCard.logo)) {\r\n                formattedVCardString += 'LOGO' + propertyToVCardString(vCard.logo.param) + ':' + e(vCard.logo.value) + nl();\r\n            }\r\n            else {\r\n                formattedVCardString += 'LOGO:' + e(vCard.logo) + nl();\r\n            }\r\n        }\r\n        if (vCard.photo) {\r\n            if (isPropertyWithParameters(vCard.photo)) {\r\n                formattedVCardString += 'PHOTO' + propertyToVCardString(vCard.photo.param) + ':' + e(vCard.photo.value) + nl();\r\n            }\r\n            else {\r\n                formattedVCardString += 'PHOTO:' + e(vCard.photo) + nl();\r\n            }\r\n        }\r\n        if (vCard.homeFax) {\r\n            vCard.homeFax.forEach(function (number) {\r\n                if (+majorVersion >= 4) {\r\n                    formattedVCardString += 'TEL;VALUE=uri;TYPE=\"fax,home\":tel:' + e(number) + nl();\r\n                }\r\n                else {\r\n                    formattedVCardString += 'TEL;TYPE=HOME,FAX:' + e(number) + nl();\r\n                }\r\n            });\r\n        }\r\n        if (vCard.workFax) {\r\n            vCard.workFax.forEach(function (number) {\r\n                if (+majorVersion >= 4) {\r\n                    formattedVCardString += 'TEL;VALUE=uri;TYPE=\"fax,work\":tel:' + e(number) + nl();\r\n                }\r\n                else {\r\n                    formattedVCardString += 'TEL;TYPE=WORK,FAX:' + e(number) + nl();\r\n                }\r\n            });\r\n        }\r\n        if (vCard.role) {\r\n            formattedVCardString += 'ROLE' + encodingPrefix + ':' + e(vCard.role) + nl();\r\n        }\r\n        if (vCard.url) {\r\n            let urlNotSet = true;\r\n            if (hasProp(vCard.url, 'home')) {\r\n                formattedVCardString += 'URL;type=HOME' + encodingPrefix + ':' + e(vCard.url.home) + nl();\r\n                urlNotSet = false;\r\n            }\r\n            if (hasProp(vCard.url, 'work')) {\r\n                formattedVCardString += 'URL;type=WORK' + encodingPrefix + ':' + e(vCard.url.work) + nl();\r\n                urlNotSet = false;\r\n            }\r\n            if (urlNotSet) {\r\n                formattedVCardString += 'URL' + encodingPrefix + ':' + e(vCard.url) + nl();\r\n            }\r\n        }\r\n        if (vCard.note) {\r\n            formattedVCardString += 'NOTE' + encodingPrefix + ':' + e(vCard.note) + nl();\r\n        }\r\n        if (vCard.socialUrls) {\r\n            for (const key in vCard.socialUrls) {\r\n                if (vCard.socialUrls.hasOwnProperty(key) && vCard.socialUrls[key]) {\r\n                    formattedVCardString +=\r\n                        'X-SOCIALPROFILE' + encodingPrefix + ';TYPE=' + key + ':' + e(vCard.socialUrls[key]) + nl();\r\n                }\r\n            }\r\n        }\r\n        if (vCard.source) {\r\n            if (isPropertyWithParameters(vCard.source)) {\r\n                formattedVCardString +=\r\n                    'SOURCE' + encodingPrefix + propertyToVCardString(vCard.source.param) + ':' + e(vCard.source.value) + +nl();\r\n            }\r\n            else {\r\n                formattedVCardString += 'SOURCE' + encodingPrefix + ':' + e(vCard.source) + nl();\r\n            }\r\n        }\r\n        if (vCard.rev) {\r\n            formattedVCardString += 'REV:' + vCard.rev + nl();\r\n        }\r\n        formattedVCardString += 'END:VCARD' + nl();\r\n        return formattedVCardString;\r\n    }\r\n}\r\n/**\r\n * Get formatted photo\r\n * @param photoType       Photo type (PHOTO, LOGO)\r\n * @param url             URL to attach photo from\r\n * @param mediaType       Media-type of photo (JPEG, PNG, GIF)\r\n */\r\nfunction getFormattedPhoto(photoType, url, mediaType, base64, majorVersion) {\r\n    let params;\r\n    if (+majorVersion >= 4) {\r\n        params = base64 ? ';ENCODING=b;MEDIATYPE=image/' : ';MEDIATYPE=image/';\r\n    }\r\n    else if (+majorVersion === 3) {\r\n        params = base64 ? ';ENCODING=b;TYPE=' : ';TYPE=';\r\n    }\r\n    else {\r\n        params = base64 ? ';ENCODING=BASE64;' : ';';\r\n    }\r\n    const formattedPhoto = photoType + params + mediaType + ':' + e(url) + nl();\r\n    return formattedPhoto;\r\n}\r\n/**\r\n * Get formatted address\r\n */\r\nfunction getFormattedAddress(address) {\r\n    return ((address.label ? ';LABEL=\"' + e(address.label) + '\"' : '') +\r\n        ':' +\r\n        e(address.postOfficeBox) +\r\n        ';' +\r\n        e(address.extendedAddress) +\r\n        ';' +\r\n        e(address.street) +\r\n        ';' +\r\n        e(address.locality) +\r\n        ';' +\r\n        e(address.region) +\r\n        ';' +\r\n        e(address.postalCode) +\r\n        ';' +\r\n        e(address.countryName));\r\n}\r\n/**\r\n * Convert date to YYYYMMDD format\r\n */\r\nfunction YYYYMMDD(date) {\r\n    if (!date) {\r\n        return '';\r\n    }\r\n    return date.toLocaleDateString('se').replace(/\\D/g, ''); // use Swedish date format\r\n}\r\n/**\r\n * Get major version from version string\r\n */\r\nfunction getMajorVersion(version) {\r\n    const majorVersionString = version ? version.slice(0, 1) : '4';\r\n    if (!isNaN(+majorVersionString)) {\r\n        return Number.parseInt(majorVersionString);\r\n    }\r\n    return 4;\r\n}\r\n/**\r\n * Determines if the object has the Property\r\n * @param obj Object to test\r\n * @param property Property to check\r\n */\r\nfunction hasProp(obj, property) {\r\n    return Object.prototype.hasOwnProperty.call(obj, property);\r\n}\n\nconst ERROR_MESSAGE = \"ngx-vcard: No input specified. You must specify either 'vcdDownloadVCard' or 'generateVCardFunction'\";\r\nclass DownloadVCardDirective {\r\n    constructor(element) {\r\n        this.element = element;\r\n        this.encoding = VCardEncoding.none;\r\n    }\r\n    onclick() {\r\n        if (this.vCard == '') {\r\n            if (this.generateVCardFunction != undefined &&\r\n                this.generateVCardFunction != '') {\r\n                this.vCard = this.generateVCardFunction();\r\n            }\r\n            else {\r\n                throw new Error(ERROR_MESSAGE);\r\n            }\r\n        }\r\n        const blob = VCardFormatter.getVCardAsBlob(this.vCard, this.encoding);\r\n        let filename = 'vCard';\r\n        if (this.vCard.name != null) {\r\n            filename =\r\n                this.vCard.name.firstNames + ' ' + this.vCard.name.lastNames + '.vcf';\r\n        }\r\n        this.download(blob, filename);\r\n    }\r\n    download(data, filename) {\r\n        // IE 11\r\n        if (window.navigator.msSaveBlob) {\r\n            window.navigator.msSaveBlob(data, filename);\r\n        }\r\n        else {\r\n            const a = document.createElement('a');\r\n            const url = URL.createObjectURL(data);\r\n            a.style.display = 'none';\r\n            a.href = url;\r\n            a.download = filename;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            window.URL.revokeObjectURL(url);\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        if (this.vCard == '' &&\r\n            (this.generateVCardFunction == '' ||\r\n                this.generateVCardFunction == undefined)) {\r\n            throw new Error(ERROR_MESSAGE);\r\n        }\r\n    }\r\n}\r\nDownloadVCardDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DownloadVCardDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\r\nDownloadVCardDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: DownloadVCardDirective, selector: \"[vcdDownloadVCard]\", inputs: { vCard: [\"vcdDownloadVCard\", \"vCard\"], generateVCardFunction: \"generateVCardFunction\", encoding: \"encoding\" }, host: { listeners: { \"click\": \"onclick()\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DownloadVCardDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[vcdDownloadVCard]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { vCard: [{\r\n                type: Input,\r\n                args: ['vcdDownloadVCard']\r\n            }], generateVCardFunction: [{\r\n                type: Input,\r\n                args: ['generateVCardFunction']\r\n            }], encoding: [{\r\n                type: Input\r\n            }], onclick: [{\r\n                type: HostListener,\r\n                args: ['click']\r\n            }] } });\n\nclass NgxVcardModule {\r\n}\r\nNgxVcardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NgxVcardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxVcardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NgxVcardModule, declarations: [DownloadVCardDirective], exports: [DownloadVCardDirective] });\r\nNgxVcardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NgxVcardModule, imports: [[]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NgxVcardModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [],\r\n                    declarations: [DownloadVCardDirective],\r\n                    exports: [DownloadVCardDirective]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of ngx-vcard\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DownloadVCardDirective, NgxVcardModule, VCardEncoding, VCardFormatter, getMajorVersion, isPropertyWithParameters, isPropertyWithParametersAddressValue, propertyToVCardString };\n//# sourceMappingURL=ngx-vcard.mjs.map\n","map":{"version":3,"file":"ngx-vcard.mjs","sources":["../../../projects/ngx-vcard/src/lib/types/vCardEncoding.ts","../../../projects/ngx-vcard/src/lib/helpers.ts","../../../projects/ngx-vcard/src/lib/types/parameter/BasicPropertyParameters.type.ts","../../../projects/ngx-vcard/src/lib/ngx-vcard.formatter.ts","../../../projects/ngx-vcard/src/lib/download-vcard.directive.ts","../../../projects/ngx-vcard/src/lib/ngx-vcard.module.ts","../../../projects/ngx-vcard/src/public_api.ts","../../../projects/ngx-vcard/src/ngx-vcard.ts"],"sourcesContent":["export enum VCardEncoding {\r\n  none = '',\r\n  utf8 = ';CHARSET=utf-8'\r\n}\r\n","/**\r\n * Encodes string\r\n */\r\nexport function e(value: string | undefined): string {\r\n  if (value) {\r\n    if (typeof value !== 'string') {\r\n      value = '' + value;\r\n    }\r\n    return value\r\n      .replace(/\\n/g, '\\n')\r\n      .replace(/,/g, ',')\r\n      .replace(/;/g, ';');\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * Return new line characters\r\n */\r\nexport function nl(): string {\r\n  return '\\n';\r\n}\r\n","import { Address } from '../vCard';\r\nimport { e } from '../../helpers';\r\n\r\n/**\r\n * A property can have attributes associated with it.\r\n * These \"property parameters\" contain meta-information about the property or the property value.\r\n * @link https://tools.ietf.org/html/rfc6350#section-5\r\n */\r\nexport interface BasicPropertyParameters {\r\n  /**\r\n   * The LANGUAGE property parameter is used to identify data in multiple languages.\r\n   * @kind Property: LANGUAGE\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.1\r\n   *\r\n   */\r\n  language?: string;\r\n  /**\r\n   * The VALUE parameter is OPTIONAL, used to identify the value type (data type) and format of the value.\r\n   * @kind Property: VALUE\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.2\r\n   */\r\n  value?:\r\n    | 'text'\r\n    | 'uri'\r\n    | 'date'\r\n    | 'time'\r\n    | 'date-time'\r\n    | 'date-and-or-time'\r\n    | 'timestamp'\r\n    | 'boolean'\r\n    | 'integer'\r\n    | 'float'\r\n    | 'utc-offset'\r\n    | 'language-tag';\r\n  /**\r\n   * The PREF parameter is OPTIONAL and is used to indicate that the corresponding instance of a property is preferred by the vCard author.\r\n   * Its value MUST be an integer between 1 and 100 that quantifies the level of preference.\r\n   * Lower values correspond to a higher level of preference, with 1 being most preferred.\r\n   * @kind Property: PREF\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.3\r\n   */\r\n  pref?:\r\n    | 1\r\n    | 2\r\n    | 3\r\n    | 4\r\n    | 5\r\n    | 6\r\n    | 7\r\n    | 8\r\n    | 9\r\n    | 10\r\n    | 11\r\n    | 12\r\n    | 13\r\n    | 14\r\n    | 15\r\n    | 16\r\n    | 17\r\n    | 18\r\n    | 19\r\n    | 20\r\n    | 21\r\n    | 22\r\n    | 23\r\n    | 24\r\n    | 25\r\n    | 26\r\n    | 27\r\n    | 28\r\n    | 29\r\n    | 30\r\n    | 31\r\n    | 32\r\n    | 33\r\n    | 34\r\n    | 35\r\n    | 36\r\n    | 37\r\n    | 38\r\n    | 39\r\n    | 40\r\n    | 41\r\n    | 42\r\n    | 43\r\n    | 44\r\n    | 45\r\n    | 46\r\n    | 47\r\n    | 48\r\n    | 49\r\n    | 50\r\n    | 51\r\n    | 52\r\n    | 53\r\n    | 54\r\n    | 55\r\n    | 56\r\n    | 57\r\n    | 58\r\n    | 59\r\n    | 60\r\n    | 61\r\n    | 62\r\n    | 63\r\n    | 64\r\n    | 65\r\n    | 66\r\n    | 67\r\n    | 68\r\n    | 69\r\n    | 70\r\n    | 71\r\n    | 72\r\n    | 73\r\n    | 74\r\n    | 75\r\n    | 76\r\n    | 77\r\n    | 78\r\n    | 79\r\n    | 80\r\n    | 81\r\n    | 82\r\n    | 83\r\n    | 84\r\n    | 85\r\n    | 86\r\n    | 87\r\n    | 88\r\n    | 89\r\n    | 90\r\n    | 91\r\n    | 92\r\n    | 93\r\n    | 94\r\n    | 95\r\n    | 96\r\n    | 97\r\n    | 98\r\n    | 99\r\n    | 100;\r\n  /**\r\n   * The ALTID parameter is used to \"tag\" property instances as being alternative representations of the same logical property.\r\n   * For example, translations of a property in multiple languages generates multiple property instances\r\n   * having different LANGUAGE parameter that are tagged with the same ALTID value.\r\n   * @kind Property: ALTID\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.4\r\n   */\r\n  altid?: string;\r\n  /**\r\n   * The PID parameter is used to identify a specific property among multiple instances.\r\n   * @kind Property: PID\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.5\r\n   */\r\n  pid?: string[];\r\n  /**\r\n   * The TYPE parameter has multiple, different uses.\r\n   * In general, it is a way of specifying class characteristics of the associated property.\r\n   * @kind Property: TYPE\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.6\r\n   */\r\n  type?:\r\n    | Array<'work' | 'home' | 'text' | 'voice' | 'fax' | 'cell' | 'video' | 'pager' | 'textphone'>\r\n    | 'work'\r\n    | 'home'\r\n    | 'text'\r\n    | 'voice'\r\n    | 'fax'\r\n    | 'cell'\r\n    | 'video'\r\n    | 'pager'\r\n    | 'textphone';\r\n  /**\r\n   * The MEDIATYPE parameter is used with properties whose value is a URI.\r\n   * @kind Property: MEDIATYPE\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.7\r\n   */\r\n  mediatype?: string;\r\n  /**\r\n   * The CALSCALE parameter is used to define the calendar system in which a date or date-time value is expressed.\r\n   * @kind Property: CALSCALE\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.8\r\n   */\r\n  calscale?: 'gregorian';\r\n  /**\r\n   * The \"sort-as\" parameter is used to specify the string to be used for national-language-specific sorting.\r\n   * Without this information, sorting algorithms could incorrectly sort this vCard within a sequence of sorted vCards.\r\n   * @kind Property: SORT-AS\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.9\r\n   */\r\n  sortas?: string[];\r\n  /**\r\n   * The GEO parameter can be used to indicate global positioning information that is specific to an address.\r\n   * @kind Property: GEO\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.10\r\n   */\r\n  geo?: string;\r\n  /**\r\n   * The TZ parameter can be used to indicate time zone information that is specific to an address.\r\n   * @kind Property: TZ\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.11\r\n   */\r\n  timezone?: string;\r\n}\r\n\r\nexport function propertyToVCardString(property: BasicPropertyParameters): string {\r\n  let str = '';\r\n  if (property.language) {\r\n    str += ';LANGUAGE=' + e(property.language);\r\n  }\r\n  if (property.value) {\r\n    str += ';VALUE=' + e(property.value);\r\n  }\r\n  if (property.altid) {\r\n    str += ';ALTID=' + e(property.altid);\r\n  }\r\n  if (property.pid) {\r\n    str += ';PID=' + property.pid.map(s => e(s)).join(',');\r\n  }\r\n  if (property.type) {\r\n    if (Array.isArray(property.type)) {\r\n      if (property.type.length === 1) {\r\n        str += ';TYPE=' + property.type[0];\r\n      } else {\r\n        str += ';TYPE=\"' + property.type.map(s => s.toLowerCase()).join(',') + '\"';\r\n      }\r\n    } else {\r\n      str += ';TYPE=' + property.type;\r\n    }\r\n  }\r\n  if (property.mediatype) {\r\n    str += ';MEDIATYPE=' + e(property.mediatype);\r\n  }\r\n  if (property.pref) {\r\n    str += ';PREF=' + property.pref;\r\n  }\r\n  if (property.calscale) {\r\n    str += ';CALSCALE=' + e(property.calscale);\r\n  }\r\n  if (property.sortas) {\r\n    str += ';SORT-AS=\"' + property.sortas.map(s => e(s)).join(',') + '\"';\r\n  }\r\n  if (property.geo) {\r\n    str += ';GEO=' + e(property.geo);\r\n  }\r\n  if (property.timezone) {\r\n    str += ';TZ=' + e(property.timezone);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nexport function isPropertyWithParameters(object: any): object is { value?: string; param?: BasicPropertyParameters } {\r\n  const test = <{ value?: string; param?: BasicPropertyParameters }>object;\r\n  if (test == null || test.param == null || test.value == null) {\r\n    return false;\r\n  }\r\n  return (\r\n    test.param.language !== undefined ||\r\n    test.param.value !== undefined ||\r\n    test.param.pref !== undefined ||\r\n    test.param.altid !== undefined ||\r\n    test.param.pid !== undefined ||\r\n    test.param.type !== undefined ||\r\n    test.param.mediatype !== undefined ||\r\n    test.param.calscale !== undefined ||\r\n    test.param.sortas !== undefined ||\r\n    test.param.geo !== undefined ||\r\n    test.param.timezone !== undefined\r\n  );\r\n}\r\n\r\nexport function isPropertyWithParametersAddressValue(\r\n  object: any\r\n): object is { value?: Address; param?: BasicPropertyParameters } {\r\n  const test = <{ value?: Address; param?: BasicPropertyParameters }>object;\r\n  if (test == null || test.param == null || test.value == null) {\r\n    return false;\r\n  }\r\n  return (\r\n    test.param.language !== undefined ||\r\n    test.param.value !== undefined ||\r\n    test.param.pref !== undefined ||\r\n    test.param.altid !== undefined ||\r\n    test.param.pid !== undefined ||\r\n    test.param.type !== undefined ||\r\n    test.param.mediatype !== undefined ||\r\n    test.param.calscale !== undefined ||\r\n    test.param.sortas !== undefined ||\r\n    test.param.geo !== undefined ||\r\n    test.param.timezone !== undefined\r\n  );\r\n}\r\n","import { VCard, Address } from './types/vCard';\r\nimport { VCardEncoding } from './types/vCardEncoding';\r\nimport {\r\n  isPropertyWithParameters,\r\n  propertyToVCardString,\r\n  BasicPropertyParameters,\r\n  isPropertyWithParametersAddressValue,\r\n} from './types/parameter/BasicPropertyParameters.type';\r\nimport { nl, e } from './helpers';\r\n\r\nexport class VCardFormatter {\r\n  public static getVCardAsBlob(vCard: VCard, encoding: VCardEncoding = VCardEncoding.none): Blob {\r\n    const data = VCardFormatter.getVCardAsString(vCard, encoding);\r\n    return new Blob([data], { type: 'text/vcard' });\r\n  }\r\n\r\n  /**\r\n   * Get formatted vCard in VCF format\r\n   */\r\n  public static getVCardAsString(vCard: VCard, encodingPrefix: VCardEncoding = VCardEncoding.none): string {\r\n    if (!vCard.version) {\r\n      vCard.version = '4.0';\r\n    }\r\n    const majorVersion = getMajorVersion(vCard.version);\r\n\r\n    let formattedVCardString = '';\r\n    formattedVCardString += 'BEGIN:VCARD' + nl();\r\n    formattedVCardString += 'VERSION:' + vCard.version + nl();\r\n\r\n    // const encodingPrefix = '';\r\n    let formattedName = '';\r\n    if (vCard.name == null) {\r\n      vCard.name = {};\r\n    }\r\n\r\n    let nameArray = [];\r\n    if (vCard.formattedName != null) {\r\n      nameArray = [vCard.formattedName.firstNames, vCard.formattedName.addtionalNames, vCard.formattedName.lastNames];\r\n    } else {\r\n      nameArray = [vCard.name.firstNames, vCard.name.addtionalNames, vCard.name.lastNames];\r\n    }\r\n\r\n    formattedName = nameArray.filter((string) => string != null).join(' ');\r\n\r\n    formattedVCardString += 'FN' + encodingPrefix + ':' + e(formattedName) + nl();\r\n\r\n    formattedVCardString +=\r\n      'N' +\r\n      encodingPrefix +\r\n      ':' +\r\n      [\r\n        e(vCard.name.lastNames),\r\n        e(vCard.name.firstNames),\r\n        e(vCard.name.addtionalNames),\r\n        e(vCard.name.namePrefix),\r\n        e(vCard.name.nameSuffix),\r\n      ].join(';') +\r\n      nl();\r\n\r\n    if (vCard.nickname && majorVersion >= 3) {\r\n      formattedVCardString += 'NICKNAME' + encodingPrefix + ':' + e(vCard.nickname) + nl();\r\n    }\r\n\r\n    if (vCard.gender) {\r\n      if (vCard.gender.sex) {\r\n        formattedVCardString += 'GENDER:' + e(vCard.gender.sex);\r\n        if (vCard.gender.text) {\r\n          formattedVCardString += ';' + e(vCard.gender.text);\r\n        }\r\n        formattedVCardString += nl();\r\n      } else {\r\n        formattedVCardString += 'GENDER:;' + e(vCard.gender.text) + nl();\r\n      }\r\n    }\r\n\r\n    if (vCard.uid) {\r\n      formattedVCardString += 'UID' + encodingPrefix + ':' + e(vCard.uid) + nl();\r\n    }\r\n\r\n    if (vCard.birthday) {\r\n      formattedVCardString += 'BDAY:' + YYYYMMDD(vCard.birthday) + nl();\r\n    }\r\n\r\n    if (vCard.anniversary) {\r\n      formattedVCardString += 'ANNIVERSARY:' + YYYYMMDD(vCard.anniversary) + nl();\r\n    }\r\n\r\n    if (vCard.language) {\r\n      vCard.language.forEach((language) => {\r\n        if (isPropertyWithParameters(language)) {\r\n          formattedVCardString += 'LANG' + propertyToVCardString(language.param) + ':' + e(language.value) + nl();\r\n        } else {\r\n          formattedVCardString += 'LANG:' + e(language) + nl();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (vCard.organization) {\r\n      if (isPropertyWithParameters(vCard.organization)) {\r\n        formattedVCardString +=\r\n          'ORG' + propertyToVCardString(vCard.organization.param) + ':' + e(vCard.organization.value) + nl();\r\n      } else {\r\n        formattedVCardString += 'ORG' + encodingPrefix + ':' + e(vCard.organization) + nl();\r\n      }\r\n    }\r\n\r\n    if (vCard.address) {\r\n      vCard.address.forEach((address) => {\r\n        if (isPropertyWithParametersAddressValue(address)) {\r\n          formattedVCardString +=\r\n            'ADR' +\r\n            propertyToVCardString(address.param as BasicPropertyParameters) +\r\n            getFormattedAddress(address.value) +\r\n            nl();\r\n        } else {\r\n          formattedVCardString += 'ADR' + getFormattedAddress(address) + nl();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (vCard.telephone) {\r\n      vCard.telephone.forEach((element) => {\r\n        if (!isPropertyWithParameters(element)) {\r\n          element = {\r\n            value: element,\r\n            param: {\r\n              type: 'voice',\r\n            },\r\n          };\r\n        }\r\n        formattedVCardString +=\r\n          'TEL' + propertyToVCardString(element.param as BasicPropertyParameters) + ':' + e(element.value) + nl();\r\n      });\r\n    }\r\n\r\n    if (vCard.email) {\r\n      vCard.email.forEach((email) => {\r\n        if (isPropertyWithParameters(email)) {\r\n          formattedVCardString += 'EMAIL' + propertyToVCardString(email.param) + ':' + e(email.value) + nl();\r\n        } else {\r\n          formattedVCardString += 'EMAIL:' + e(email) + nl();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (vCard.title) {\r\n      formattedVCardString += 'TITLE' + encodingPrefix + ':' + e(vCard.title) + nl();\r\n    }\r\n\r\n    if (vCard.logo) {\r\n      if (isPropertyWithParameters(vCard.logo)) {\r\n        formattedVCardString += 'LOGO' + propertyToVCardString(vCard.logo.param) + ':' + e(vCard.logo.value) + nl();\r\n      } else {\r\n        formattedVCardString += 'LOGO:' + e(vCard.logo) + nl();\r\n      }\r\n    }\r\n\r\n    if (vCard.photo) {\r\n      if (isPropertyWithParameters(vCard.photo)) {\r\n        formattedVCardString += 'PHOTO' + propertyToVCardString(vCard.photo.param) + ':' + e(vCard.photo.value) + nl();\r\n      } else {\r\n        formattedVCardString += 'PHOTO:' + e(vCard.photo) + nl();\r\n      }\r\n    }\r\n\r\n    if (vCard.homeFax) {\r\n      vCard.homeFax.forEach(function (number) {\r\n        if (+majorVersion >= 4) {\r\n          formattedVCardString += 'TEL;VALUE=uri;TYPE=\"fax,home\":tel:' + e(number) + nl();\r\n        } else {\r\n          formattedVCardString += 'TEL;TYPE=HOME,FAX:' + e(number) + nl();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (vCard.workFax) {\r\n      vCard.workFax.forEach(function (number) {\r\n        if (+majorVersion >= 4) {\r\n          formattedVCardString += 'TEL;VALUE=uri;TYPE=\"fax,work\":tel:' + e(number) + nl();\r\n        } else {\r\n          formattedVCardString += 'TEL;TYPE=WORK,FAX:' + e(number) + nl();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (vCard.role) {\r\n      formattedVCardString += 'ROLE' + encodingPrefix + ':' + e(vCard.role) + nl();\r\n    }\r\n\r\n    if (vCard.url) {\r\n      let urlNotSet = true;\r\n      if (hasProp(vCard.url, 'home')) {\r\n        formattedVCardString += 'URL;type=HOME' + encodingPrefix + ':' + e((vCard.url as { home: string }).home) + nl();\r\n        urlNotSet = false;\r\n      }\r\n\r\n      if (hasProp(vCard.url, 'work')) {\r\n        formattedVCardString += 'URL;type=WORK' + encodingPrefix + ':' + e((vCard.url as { work: string }).work) + nl();\r\n        urlNotSet = false;\r\n      }\r\n      if (urlNotSet) {\r\n        formattedVCardString += 'URL' + encodingPrefix + ':' + e(vCard.url as string) + nl();\r\n      }\r\n    }\r\n\r\n    if (vCard.note) {\r\n      formattedVCardString += 'NOTE' + encodingPrefix + ':' + e(vCard.note) + nl();\r\n    }\r\n\r\n    if (vCard.socialUrls) {\r\n      for (const key in vCard.socialUrls) {\r\n        if (vCard.socialUrls.hasOwnProperty(key) && vCard.socialUrls[key]) {\r\n          formattedVCardString +=\r\n            'X-SOCIALPROFILE' + encodingPrefix + ';TYPE=' + key + ':' + e(vCard.socialUrls[key]) + nl();\r\n        }\r\n      }\r\n    }\r\n\r\n    if (vCard.source) {\r\n      if (isPropertyWithParameters(vCard.source)) {\r\n        formattedVCardString +=\r\n          'SOURCE' + encodingPrefix + propertyToVCardString(vCard.source.param) + ':' + e(vCard.source.value) + +nl();\r\n      } else {\r\n        formattedVCardString += 'SOURCE' + encodingPrefix + ':' + e(vCard.source) + nl();\r\n      }\r\n    }\r\n    if (vCard.rev) {\r\n      formattedVCardString += 'REV:' + vCard.rev + nl();\r\n    }\r\n    formattedVCardString += 'END:VCARD' + nl();\r\n    return formattedVCardString;\r\n  }\r\n}\r\n\r\n/**\r\n * Get formatted photo\r\n * @param photoType       Photo type (PHOTO, LOGO)\r\n * @param url             URL to attach photo from\r\n * @param mediaType       Media-type of photo (JPEG, PNG, GIF)\r\n */\r\nfunction getFormattedPhoto(\r\n  photoType: 'PHOTO' | 'LOGO',\r\n  url: string,\r\n  mediaType: string,\r\n  base64: boolean,\r\n  majorVersion: number\r\n) {\r\n  let params;\r\n\r\n  if (+majorVersion >= 4) {\r\n    params = base64 ? ';ENCODING=b;MEDIATYPE=image/' : ';MEDIATYPE=image/';\r\n  } else if (+majorVersion === 3) {\r\n    params = base64 ? ';ENCODING=b;TYPE=' : ';TYPE=';\r\n  } else {\r\n    params = base64 ? ';ENCODING=BASE64;' : ';';\r\n  }\r\n\r\n  const formattedPhoto = photoType + params + mediaType + ':' + e(url) + nl();\r\n  return formattedPhoto;\r\n}\r\n\r\n/**\r\n * Get formatted address\r\n */\r\nfunction getFormattedAddress(address: Address) {\r\n  return (\r\n    (address.label ? ';LABEL=\"' + e(address.label) + '\"' : '') +\r\n    ':' +\r\n    e(address.postOfficeBox) +\r\n    ';' +\r\n    e(address.extendedAddress) +\r\n    ';' +\r\n    e(address.street) +\r\n    ';' +\r\n    e(address.locality) +\r\n    ';' +\r\n    e(address.region) +\r\n    ';' +\r\n    e(address.postalCode) +\r\n    ';' +\r\n    e(address.countryName)\r\n  );\r\n}\r\n\r\n/**\r\n * Convert date to YYYYMMDD format\r\n */\r\nfunction YYYYMMDD(date: Date | undefined): string {\r\n  if (!date) {\r\n    return '';\r\n  }\r\n  return date.toLocaleDateString('se').replace(/\\D/g, ''); // use Swedish date format\r\n}\r\n\r\n/**\r\n * Get major version from version string\r\n */\r\nexport function getMajorVersion(version: string): number {\r\n  const majorVersionString = version ? version.slice(0, 1) : '4';\r\n  if (!isNaN(+majorVersionString)) {\r\n    return Number.parseInt(majorVersionString);\r\n  }\r\n  return 4;\r\n}\r\n\r\n/**\r\n * Determines if the object has the Property\r\n * @param obj Object to test\r\n * @param property Property to check\r\n */\r\nfunction hasProp(obj: any, property: string): boolean {\r\n  return Object.prototype.hasOwnProperty.call(obj, property);\r\n}\r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\nimport { VCardFormatter } from './ngx-vcard.formatter';\r\nimport { VCard } from './types/vCard';\r\nimport { VCardEncoding } from './types/vCardEncoding';\r\n\r\ndeclare global {\r\n  interface Navigator {\r\n      msSaveBlob?: (blob: any, defaultName?: string) => boolean\r\n  }\r\n}\r\n\r\nconst ERROR_MESSAGE =\r\n  \"ngx-vcard: No input specified. You must specify either 'vcdDownloadVCard' or 'generateVCardFunction'\";\r\n@Directive({\r\n  selector: '[vcdDownloadVCard]',\r\n})\r\nexport class DownloadVCardDirective {\r\n  constructor(private element: ElementRef) {}\r\n  // This property is always specified as it is the selector,\r\n  // which means it can't be undefined\r\n  @Input('vcdDownloadVCard')\r\n  vCard!: VCard | '';\r\n  @Input('generateVCardFunction')\r\n  generateVCardFunction: (() => VCard) | '' | undefined;\r\n  @Input() public encoding: VCardEncoding = VCardEncoding.none;\r\n\r\n  @HostListener('click')\r\n  onclick() {\r\n    if (this.vCard == '') {\r\n      if (\r\n        this.generateVCardFunction != undefined &&\r\n        this.generateVCardFunction != ''\r\n      ) {\r\n        this.vCard = this.generateVCardFunction();\r\n      } else {\r\n        throw new Error(ERROR_MESSAGE);\r\n      }\r\n    }\r\n    const blob = VCardFormatter.getVCardAsBlob(this.vCard, this.encoding);\r\n    let filename = 'vCard';\r\n    if (this.vCard.name != null) {\r\n      filename =\r\n        this.vCard.name.firstNames + ' ' + this.vCard.name.lastNames + '.vcf';\r\n    }\r\n    this.download(blob, filename);\r\n  }\r\n\r\n  private download(data: Blob, filename: string) {\r\n    // IE 11\r\n    if (window.navigator.msSaveBlob) {\r\n      window.navigator.msSaveBlob(data, filename);\r\n    } else {\r\n      const a: HTMLAnchorElement = document.createElement('a');\r\n      const url = URL.createObjectURL(data);\r\n      (a as any).style.display = 'none';\r\n      a.href = url;\r\n      a.download = filename;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      window.URL.revokeObjectURL(url);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (\r\n      this.vCard == '' &&\r\n      (this.generateVCardFunction == '' ||\r\n        this.generateVCardFunction == undefined)\r\n    ) {\r\n      throw new Error(ERROR_MESSAGE);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { DownloadVCardDirective } from './download-vcard.directive';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [DownloadVCardDirective],\r\n  exports: [DownloadVCardDirective]\r\n})\r\nexport class NgxVcardModule { }\r\n","/*\r\n * Public API Surface of ngx-vcard\r\n */\r\n\r\nexport * from './lib/ngx-vcard.module';\r\nexport * from './lib/ngx-vcard.formatter';\r\nexport * from './lib/download-vcard.directive';\r\nexport * from './lib/types/vCard';\r\nexport * from './lib/types/vCardEncoding';\r\nexport * from './lib/types/parameter/BasicPropertyParameters.type';\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}}}